// This file was generated by Beaver v0.9.6.1

1:	EOF: REDUCE empty = 
	CLASS: SHIFT; goto 7
	STUB: SHIFT; goto 183
	empty: SHIFT; goto 6
	classdecl: SHIFT; goto 4
	class_list: SHIFT; goto 2
	bogus: SHIFT; goto 3
	program: ACCEPT
2:	EOF: REDUCE program = class_list.cl
3:	EOF: REDUCE program = bogus
4:	EOF: REDUCE empty = 
	CLASS: SHIFT; goto 7
	empty: SHIFT; goto 6
	classdecl: SHIFT; goto 4
	class_list: SHIFT; goto 5
5:	EOF: REDUCE class_list = classdecl.cd class_list.cl
6:	EOF: REDUCE class_list = empty
7:	TYPE: SHIFT; goto 8
8:	LBRACE: REDUCE empty = 
	LPAREN: SHIFT; goto 170
	EXTENDS: REDUCE empty = 
	empty: SHIFT; goto 182
	varformals: SHIFT; goto 9
9:	LBRACE: REDUCE empty = 
	EXTENDS: SHIFT; goto 164
	empty: SHIFT; goto 169
	have_extends: SHIFT; goto 10
10:	LBRACE: SHIFT; goto 12
	classbody: SHIFT; goto 11
11:	EOF: REDUCE classdecl = CLASS TYPE.t varformals.v have_extends.e classbody.fl
	CLASS: REDUCE classdecl = CLASS TYPE.t varformals.v have_extends.e classbody.fl
12:	RBRACE: REDUCE empty = 
	LBRACE: SHIFT; goto 160
	VAR: SHIFT; goto 150
	DEF: SHIFT; goto 142
	OVERRIDE: SHIFT; goto 18
	empty: SHIFT; goto 17
	feature: SHIFT; goto 15
	feature_list: SHIFT; goto 13
13:	RBRACE: SHIFT; goto 14
14:	EOF: REDUCE classbody = LBRACE feature_list.fl RBRACE
	CLASS: REDUCE classbody = LBRACE feature_list.fl RBRACE
15:	RBRACE: REDUCE empty = 
	LBRACE: SHIFT; goto 160
	VAR: SHIFT; goto 150
	DEF: SHIFT; goto 142
	OVERRIDE: SHIFT; goto 18
	empty: SHIFT; goto 17
	feature: SHIFT; goto 15
	feature_list: SHIFT; goto 16
16:	RBRACE: REDUCE feature_list = feature.f feature_list.fl
17:	RBRACE: REDUCE feature_list = empty
18:	DEF: SHIFT; goto 19
19:	ID: SHIFT; goto 20
20:	LPAREN: SHIFT; goto 132
	formals: SHIFT; goto 21
21:	COLON: SHIFT; goto 22
22:	TYPE: SHIFT; goto 23
23:	ASSIGN: SHIFT; goto 24
24:	MINUS: SHIFT; goto 113
	LBRACE: SHIFT; goto 67
	LPAREN: SHIFT; goto 105
	ID: SHIFT; goto 100
	NULL: SHIFT; goto 109
	NEW: SHIFT; goto 118
	THIS: SHIFT; goto 103
	SUPER: SHIFT; goto 40
	NOT: SHIFT; goto 116
	INTEGER: SHIFT; goto 110
	STRING: SHIFT; goto 111
	BOOLEAN: SHIFT; goto 112
	IF: SHIFT; goto 32
	WHILE: SHIFT; goto 50
	NATIVE: SHIFT; goto 28
	lexpr: SHIFT; goto 29
	primary: SHIFT; goto 81
	ident: SHIFT; goto 49
	product: SHIFT; goto 127
	sum: SHIFT; goto 121
	equiv: SHIFT; goto 104
	rexpr: SHIFT; goto 39
	rel: SHIFT; goto 55
	expr: SHIFT; goto 27
	expr_or_native: SHIFT; goto 25
25:	SEMI: SHIFT; goto 26
26:	RBRACE: REDUCE feature = OVERRIDE DEF ID.id formals.fl COLON TYPE.t ASSIGN expr_or_native.e SEMI
	LBRACE: REDUCE feature = OVERRIDE DEF ID.id formals.fl COLON TYPE.t ASSIGN expr_or_native.e SEMI
	VAR: REDUCE feature = OVERRIDE DEF ID.id formals.fl COLON TYPE.t ASSIGN expr_or_native.e SEMI
	DEF: REDUCE feature = OVERRIDE DEF ID.id formals.fl COLON TYPE.t ASSIGN expr_or_native.e SEMI
	OVERRIDE: REDUCE feature = OVERRIDE DEF ID.id formals.fl COLON TYPE.t ASSIGN expr_or_native.e SEMI
27:	SEMI: REDUCE expr_or_native = expr.e
28:	SEMI: REDUCE expr_or_native = NATIVE
29:	RBRACE: REDUCE primary = lexpr.e
	RPAREN: REDUCE primary = lexpr.e
	MINUS: REDUCE primary = lexpr.e
	COMMA: REDUCE primary = lexpr.e
	SEMI: REDUCE primary = lexpr.e
	CASE: REDUCE primary = lexpr.e
	ELSE: REDUCE primary = lexpr.e
	LE: REDUCE primary = lexpr.e
	LT: REDUCE primary = lexpr.e
	EQUALS: REDUCE primary = lexpr.e
	PLUS: REDUCE primary = lexpr.e
	TIMES: REDUCE primary = lexpr.e
	DIV: REDUCE primary = lexpr.e
	DOT: REDUCE primary = lexpr.e
	MATCH: REDUCE primary = lexpr.e
	ASSIGN: SHIFT; goto 30
30:	MINUS: SHIFT; goto 113
	LBRACE: SHIFT; goto 67
	LPAREN: SHIFT; goto 105
	ID: SHIFT; goto 100
	NULL: SHIFT; goto 109
	NEW: SHIFT; goto 118
	THIS: SHIFT; goto 103
	SUPER: SHIFT; goto 40
	NOT: SHIFT; goto 116
	INTEGER: SHIFT; goto 110
	STRING: SHIFT; goto 111
	BOOLEAN: SHIFT; goto 112
	IF: SHIFT; goto 32
	WHILE: SHIFT; goto 50
	lexpr: SHIFT; goto 115
	primary: SHIFT; goto 81
	ident: SHIFT; goto 49
	product: SHIFT; goto 127
	sum: SHIFT; goto 121
	equiv: SHIFT; goto 104
	rexpr: SHIFT; goto 31
	rel: SHIFT; goto 55
31:	RBRACE: REDUCE expr = lexpr.le ASSIGN rexpr.re
	RPAREN: REDUCE expr = lexpr.le ASSIGN rexpr.re
	COMMA: REDUCE expr = lexpr.le ASSIGN rexpr.re
	SEMI: REDUCE expr = lexpr.le ASSIGN rexpr.re
	CASE: REDUCE expr = lexpr.le ASSIGN rexpr.re
	ELSE: REDUCE expr = lexpr.le ASSIGN rexpr.re
32:	LPAREN: SHIFT; goto 33
33:	MINUS: SHIFT; goto 113
	LBRACE: SHIFT; goto 67
	LPAREN: SHIFT; goto 105
	ID: SHIFT; goto 100
	NULL: SHIFT; goto 109
	NEW: SHIFT; goto 118
	THIS: SHIFT; goto 103
	SUPER: SHIFT; goto 40
	NOT: SHIFT; goto 116
	INTEGER: SHIFT; goto 110
	STRING: SHIFT; goto 111
	BOOLEAN: SHIFT; goto 112
	IF: SHIFT; goto 32
	WHILE: SHIFT; goto 50
	lexpr: SHIFT; goto 115
	primary: SHIFT; goto 81
	ident: SHIFT; goto 49
	product: SHIFT; goto 127
	sum: SHIFT; goto 121
	equiv: SHIFT; goto 104
	rexpr: SHIFT; goto 34
	rel: SHIFT; goto 55
34:	RPAREN: SHIFT; goto 35
35:	MINUS: SHIFT; goto 113
	LBRACE: SHIFT; goto 67
	LPAREN: SHIFT; goto 105
	ID: SHIFT; goto 100
	NULL: SHIFT; goto 109
	NEW: SHIFT; goto 118
	THIS: SHIFT; goto 103
	SUPER: SHIFT; goto 40
	NOT: SHIFT; goto 116
	INTEGER: SHIFT; goto 110
	STRING: SHIFT; goto 111
	BOOLEAN: SHIFT; goto 112
	IF: SHIFT; goto 32
	WHILE: SHIFT; goto 50
	lexpr: SHIFT; goto 29
	primary: SHIFT; goto 81
	ident: SHIFT; goto 49
	product: SHIFT; goto 127
	sum: SHIFT; goto 121
	equiv: SHIFT; goto 104
	rexpr: SHIFT; goto 39
	rel: SHIFT; goto 55
	expr: SHIFT; goto 36
36:	ELSE: SHIFT; goto 37
37:	MINUS: SHIFT; goto 113
	LBRACE: SHIFT; goto 67
	LPAREN: SHIFT; goto 105
	ID: SHIFT; goto 100
	NULL: SHIFT; goto 109
	NEW: SHIFT; goto 118
	THIS: SHIFT; goto 103
	SUPER: SHIFT; goto 40
	NOT: SHIFT; goto 116
	INTEGER: SHIFT; goto 110
	STRING: SHIFT; goto 111
	BOOLEAN: SHIFT; goto 112
	IF: SHIFT; goto 32
	WHILE: SHIFT; goto 50
	lexpr: SHIFT; goto 29
	primary: SHIFT; goto 81
	ident: SHIFT; goto 49
	product: SHIFT; goto 127
	sum: SHIFT; goto 121
	equiv: SHIFT; goto 104
	rexpr: SHIFT; goto 39
	rel: SHIFT; goto 55
	expr: SHIFT; goto 38
38:	RBRACE: REDUCE rexpr = IF LPAREN rexpr.cond RPAREN expr.m ELSE expr.e
	RPAREN: REDUCE rexpr = IF LPAREN rexpr.cond RPAREN expr.m ELSE expr.e
	COMMA: REDUCE rexpr = IF LPAREN rexpr.cond RPAREN expr.m ELSE expr.e
	SEMI: REDUCE rexpr = IF LPAREN rexpr.cond RPAREN expr.m ELSE expr.e
	CASE: REDUCE rexpr = IF LPAREN rexpr.cond RPAREN expr.m ELSE expr.e
	ELSE: REDUCE rexpr = IF LPAREN rexpr.cond RPAREN expr.m ELSE expr.e
39:	RBRACE: REDUCE expr = rexpr.r
	RPAREN: REDUCE expr = rexpr.r
	COMMA: REDUCE expr = rexpr.r
	SEMI: REDUCE expr = rexpr.r
	CASE: REDUCE expr = rexpr.r
	ELSE: REDUCE expr = rexpr.r
40:	DOT: SHIFT; goto 41
41:	ID: SHIFT; goto 42
42:	LPAREN: SHIFT; goto 44
	actuals: SHIFT; goto 43
43:	RBRACE: REDUCE lexpr = SUPER DOT ID.id actuals.a
	RPAREN: REDUCE lexpr = SUPER DOT ID.id actuals.a
	MINUS: REDUCE lexpr = SUPER DOT ID.id actuals.a
	COMMA: REDUCE lexpr = SUPER DOT ID.id actuals.a
	SEMI: REDUCE lexpr = SUPER DOT ID.id actuals.a
	CASE: REDUCE lexpr = SUPER DOT ID.id actuals.a
	ELSE: REDUCE lexpr = SUPER DOT ID.id actuals.a
	LE: REDUCE lexpr = SUPER DOT ID.id actuals.a
	LT: REDUCE lexpr = SUPER DOT ID.id actuals.a
	EQUALS: REDUCE lexpr = SUPER DOT ID.id actuals.a
	PLUS: REDUCE lexpr = SUPER DOT ID.id actuals.a
	TIMES: REDUCE lexpr = SUPER DOT ID.id actuals.a
	DIV: REDUCE lexpr = SUPER DOT ID.id actuals.a
	DOT: REDUCE lexpr = SUPER DOT ID.id actuals.a
	MATCH: REDUCE lexpr = SUPER DOT ID.id actuals.a
	ASSIGN: REDUCE lexpr = SUPER DOT ID.id actuals.a
44:	RPAREN: REDUCE empty = 
	MINUS: SHIFT; goto 113
	COMMA: REDUCE empty = 
	LBRACE: SHIFT; goto 67
	LPAREN: SHIFT; goto 105
	ID: SHIFT; goto 100
	NULL: SHIFT; goto 109
	NEW: SHIFT; goto 118
	THIS: SHIFT; goto 103
	SUPER: SHIFT; goto 40
	NOT: SHIFT; goto 116
	INTEGER: SHIFT; goto 110
	STRING: SHIFT; goto 111
	BOOLEAN: SHIFT; goto 112
	IF: SHIFT; goto 32
	WHILE: SHIFT; goto 50
	lexpr: SHIFT; goto 29
	primary: SHIFT; goto 81
	ident: SHIFT; goto 49
	product: SHIFT; goto 127
	sum: SHIFT; goto 121
	equiv: SHIFT; goto 104
	empty: SHIFT; goto 131
	rexpr: SHIFT; goto 39
	rel: SHIFT; goto 55
	expr: SHIFT; goto 130
	exp_list: SHIFT; goto 45
45:	RPAREN: SHIFT; goto 46
	COMMA: SHIFT; goto 47
46:	RBRACE: REDUCE actuals = LPAREN exp_list.el RPAREN
	RPAREN: REDUCE actuals = LPAREN exp_list.el RPAREN
	MINUS: REDUCE actuals = LPAREN exp_list.el RPAREN
	COMMA: REDUCE actuals = LPAREN exp_list.el RPAREN
	LBRACE: REDUCE actuals = LPAREN exp_list.el RPAREN
	SEMI: REDUCE actuals = LPAREN exp_list.el RPAREN
	CASE: REDUCE actuals = LPAREN exp_list.el RPAREN
	ELSE: REDUCE actuals = LPAREN exp_list.el RPAREN
	LE: REDUCE actuals = LPAREN exp_list.el RPAREN
	LT: REDUCE actuals = LPAREN exp_list.el RPAREN
	EQUALS: REDUCE actuals = LPAREN exp_list.el RPAREN
	PLUS: REDUCE actuals = LPAREN exp_list.el RPAREN
	TIMES: REDUCE actuals = LPAREN exp_list.el RPAREN
	DIV: REDUCE actuals = LPAREN exp_list.el RPAREN
	DOT: REDUCE actuals = LPAREN exp_list.el RPAREN
	MATCH: REDUCE actuals = LPAREN exp_list.el RPAREN
	ASSIGN: REDUCE actuals = LPAREN exp_list.el RPAREN
47:	MINUS: SHIFT; goto 113
	LBRACE: SHIFT; goto 67
	LPAREN: SHIFT; goto 105
	ID: SHIFT; goto 100
	NULL: SHIFT; goto 109
	NEW: SHIFT; goto 118
	THIS: SHIFT; goto 103
	SUPER: SHIFT; goto 40
	NOT: SHIFT; goto 116
	INTEGER: SHIFT; goto 110
	STRING: SHIFT; goto 111
	BOOLEAN: SHIFT; goto 112
	IF: SHIFT; goto 32
	WHILE: SHIFT; goto 50
	lexpr: SHIFT; goto 29
	primary: SHIFT; goto 81
	ident: SHIFT; goto 49
	product: SHIFT; goto 127
	sum: SHIFT; goto 121
	equiv: SHIFT; goto 104
	rexpr: SHIFT; goto 39
	rel: SHIFT; goto 55
	expr: SHIFT; goto 48
48:	RPAREN: REDUCE exp_list = exp_list.el COMMA expr.e
	COMMA: REDUCE exp_list = exp_list.el COMMA expr.e
49:	RBRACE: REDUCE lexpr = ident.id
	RPAREN: REDUCE lexpr = ident.id
	MINUS: REDUCE lexpr = ident.id
	COMMA: REDUCE lexpr = ident.id
	SEMI: REDUCE lexpr = ident.id
	CASE: REDUCE lexpr = ident.id
	ELSE: REDUCE lexpr = ident.id
	LE: REDUCE lexpr = ident.id
	LT: REDUCE lexpr = ident.id
	EQUALS: REDUCE lexpr = ident.id
	PLUS: REDUCE lexpr = ident.id
	TIMES: REDUCE lexpr = ident.id
	DIV: REDUCE lexpr = ident.id
	DOT: REDUCE lexpr = ident.id
	MATCH: REDUCE lexpr = ident.id
	ASSIGN: REDUCE lexpr = ident.id
50:	LPAREN: SHIFT; goto 51
51:	MINUS: SHIFT; goto 113
	LBRACE: SHIFT; goto 67
	LPAREN: SHIFT; goto 105
	ID: SHIFT; goto 100
	NULL: SHIFT; goto 109
	NEW: SHIFT; goto 118
	THIS: SHIFT; goto 103
	SUPER: SHIFT; goto 40
	NOT: SHIFT; goto 116
	INTEGER: SHIFT; goto 110
	STRING: SHIFT; goto 111
	BOOLEAN: SHIFT; goto 112
	IF: SHIFT; goto 32
	WHILE: SHIFT; goto 50
	lexpr: SHIFT; goto 115
	primary: SHIFT; goto 81
	ident: SHIFT; goto 49
	product: SHIFT; goto 127
	sum: SHIFT; goto 121
	equiv: SHIFT; goto 104
	rexpr: SHIFT; goto 52
	rel: SHIFT; goto 55
52:	RPAREN: SHIFT; goto 53
53:	MINUS: SHIFT; goto 113
	LBRACE: SHIFT; goto 67
	LPAREN: SHIFT; goto 105
	ID: SHIFT; goto 100
	NULL: SHIFT; goto 109
	NEW: SHIFT; goto 118
	THIS: SHIFT; goto 103
	SUPER: SHIFT; goto 40
	NOT: SHIFT; goto 116
	INTEGER: SHIFT; goto 110
	STRING: SHIFT; goto 111
	BOOLEAN: SHIFT; goto 112
	IF: SHIFT; goto 32
	WHILE: SHIFT; goto 50
	lexpr: SHIFT; goto 29
	primary: SHIFT; goto 81
	ident: SHIFT; goto 49
	product: SHIFT; goto 127
	sum: SHIFT; goto 121
	equiv: SHIFT; goto 104
	rexpr: SHIFT; goto 39
	rel: SHIFT; goto 55
	expr: SHIFT; goto 54
54:	RBRACE: REDUCE rexpr = WHILE LPAREN rexpr.cond RPAREN expr.e
	RPAREN: REDUCE rexpr = WHILE LPAREN rexpr.cond RPAREN expr.e
	COMMA: REDUCE rexpr = WHILE LPAREN rexpr.cond RPAREN expr.e
	SEMI: REDUCE rexpr = WHILE LPAREN rexpr.cond RPAREN expr.e
	CASE: REDUCE rexpr = WHILE LPAREN rexpr.cond RPAREN expr.e
	ELSE: REDUCE rexpr = WHILE LPAREN rexpr.cond RPAREN expr.e
55:	RBRACE: REDUCE rexpr = rel.r
	RPAREN: REDUCE rexpr = rel.r
	COMMA: REDUCE rexpr = rel.r
	SEMI: REDUCE rexpr = rel.r
	CASE: REDUCE rexpr = rel.r
	ELSE: REDUCE rexpr = rel.r
	LE: SHIFT; goto 56
	LT: SHIFT; goto 128
56:	MINUS: SHIFT; goto 113
	LBRACE: SHIFT; goto 67
	LPAREN: SHIFT; goto 105
	ID: SHIFT; goto 100
	NULL: SHIFT; goto 109
	NEW: SHIFT; goto 118
	THIS: SHIFT; goto 103
	SUPER: SHIFT; goto 40
	NOT: SHIFT; goto 116
	INTEGER: SHIFT; goto 110
	STRING: SHIFT; goto 111
	BOOLEAN: SHIFT; goto 112
	lexpr: SHIFT; goto 115
	primary: SHIFT; goto 126
	ident: SHIFT; goto 49
	product: SHIFT; goto 127
	sum: SHIFT; goto 121
	equiv: SHIFT; goto 57
57:	RBRACE: REDUCE rel = rel.r LE equiv.e
	RPAREN: REDUCE rel = rel.r LE equiv.e
	COMMA: REDUCE rel = rel.r LE equiv.e
	SEMI: REDUCE rel = rel.r LE equiv.e
	CASE: REDUCE rel = rel.r LE equiv.e
	ELSE: REDUCE rel = rel.r LE equiv.e
	LE: REDUCE rel = rel.r LE equiv.e
	LT: REDUCE rel = rel.r LE equiv.e
	EQUALS: SHIFT; goto 58
58:	MINUS: SHIFT; goto 113
	LBRACE: SHIFT; goto 67
	LPAREN: SHIFT; goto 105
	ID: SHIFT; goto 100
	NULL: SHIFT; goto 109
	NEW: SHIFT; goto 118
	THIS: SHIFT; goto 103
	SUPER: SHIFT; goto 40
	NOT: SHIFT; goto 116
	INTEGER: SHIFT; goto 110
	STRING: SHIFT; goto 111
	BOOLEAN: SHIFT; goto 112
	lexpr: SHIFT; goto 115
	primary: SHIFT; goto 126
	ident: SHIFT; goto 49
	product: SHIFT; goto 127
	sum: SHIFT; goto 59
59:	RBRACE: REDUCE equiv = equiv.e EQUALS sum.s
	RPAREN: REDUCE equiv = equiv.e EQUALS sum.s
	MINUS: SHIFT; goto 122
	COMMA: REDUCE equiv = equiv.e EQUALS sum.s
	SEMI: REDUCE equiv = equiv.e EQUALS sum.s
	CASE: REDUCE equiv = equiv.e EQUALS sum.s
	ELSE: REDUCE equiv = equiv.e EQUALS sum.s
	LE: REDUCE equiv = equiv.e EQUALS sum.s
	LT: REDUCE equiv = equiv.e EQUALS sum.s
	EQUALS: REDUCE equiv = equiv.e EQUALS sum.s
	PLUS: SHIFT; goto 60
60:	MINUS: SHIFT; goto 113
	LBRACE: SHIFT; goto 67
	LPAREN: SHIFT; goto 105
	ID: SHIFT; goto 100
	NULL: SHIFT; goto 109
	NEW: SHIFT; goto 118
	THIS: SHIFT; goto 103
	SUPER: SHIFT; goto 40
	NOT: SHIFT; goto 116
	INTEGER: SHIFT; goto 110
	STRING: SHIFT; goto 111
	BOOLEAN: SHIFT; goto 112
	lexpr: SHIFT; goto 115
	primary: SHIFT; goto 126
	ident: SHIFT; goto 49
	product: SHIFT; goto 61
61:	RBRACE: REDUCE sum = sum.s PLUS product.p
	RPAREN: REDUCE sum = sum.s PLUS product.p
	MINUS: REDUCE sum = sum.s PLUS product.p
	COMMA: REDUCE sum = sum.s PLUS product.p
	SEMI: REDUCE sum = sum.s PLUS product.p
	CASE: REDUCE sum = sum.s PLUS product.p
	ELSE: REDUCE sum = sum.s PLUS product.p
	LE: REDUCE sum = sum.s PLUS product.p
	LT: REDUCE sum = sum.s PLUS product.p
	EQUALS: REDUCE sum = sum.s PLUS product.p
	PLUS: REDUCE sum = sum.s PLUS product.p
	TIMES: SHIFT; goto 62
	DIV: SHIFT; goto 124
62:	MINUS: SHIFT; goto 113
	LBRACE: SHIFT; goto 67
	LPAREN: SHIFT; goto 105
	ID: SHIFT; goto 100
	NULL: SHIFT; goto 109
	NEW: SHIFT; goto 118
	THIS: SHIFT; goto 103
	SUPER: SHIFT; goto 40
	NOT: SHIFT; goto 116
	INTEGER: SHIFT; goto 110
	STRING: SHIFT; goto 111
	BOOLEAN: SHIFT; goto 112
	lexpr: SHIFT; goto 115
	primary: SHIFT; goto 63
	ident: SHIFT; goto 49
63:	RBRACE: REDUCE product = product.p TIMES primary.i
	RPAREN: REDUCE product = product.p TIMES primary.i
	MINUS: REDUCE product = product.p TIMES primary.i
	COMMA: REDUCE product = product.p TIMES primary.i
	SEMI: REDUCE product = product.p TIMES primary.i
	CASE: REDUCE product = product.p TIMES primary.i
	ELSE: REDUCE product = product.p TIMES primary.i
	LE: REDUCE product = product.p TIMES primary.i
	LT: REDUCE product = product.p TIMES primary.i
	EQUALS: REDUCE product = product.p TIMES primary.i
	PLUS: REDUCE product = product.p TIMES primary.i
	TIMES: REDUCE product = product.p TIMES primary.i
	DIV: REDUCE product = product.p TIMES primary.i
	DOT: SHIFT; goto 64
64:	ID: SHIFT; goto 65
65:	LPAREN: SHIFT; goto 44
	actuals: SHIFT; goto 66
66:	RBRACE: REDUCE primary = primary.p DOT ID.id actuals.a
	RPAREN: REDUCE primary = primary.p DOT ID.id actuals.a
	MINUS: REDUCE primary = primary.p DOT ID.id actuals.a
	COMMA: REDUCE primary = primary.p DOT ID.id actuals.a
	SEMI: REDUCE primary = primary.p DOT ID.id actuals.a
	CASE: REDUCE primary = primary.p DOT ID.id actuals.a
	ELSE: REDUCE primary = primary.p DOT ID.id actuals.a
	LE: REDUCE primary = primary.p DOT ID.id actuals.a
	LT: REDUCE primary = primary.p DOT ID.id actuals.a
	EQUALS: REDUCE primary = primary.p DOT ID.id actuals.a
	PLUS: REDUCE primary = primary.p DOT ID.id actuals.a
	TIMES: REDUCE primary = primary.p DOT ID.id actuals.a
	DIV: REDUCE primary = primary.p DOT ID.id actuals.a
	DOT: REDUCE primary = primary.p DOT ID.id actuals.a
	MATCH: REDUCE primary = primary.p DOT ID.id actuals.a
67:	RBRACE: REDUCE empty = 
	MINUS: REDUCE empty = 
	LBRACE: REDUCE empty = 
	LPAREN: REDUCE empty = 
	ID: REDUCE empty = 
	NULL: REDUCE empty = 
	NEW: REDUCE empty = 
	THIS: REDUCE empty = 
	SUPER: REDUCE empty = 
	NOT: REDUCE empty = 
	INTEGER: REDUCE empty = 
	STRING: REDUCE empty = 
	BOOLEAN: REDUCE empty = 
	IF: REDUCE empty = 
	WHILE: REDUCE empty = 
	VAR: REDUCE empty = 
	empty: SHIFT; goto 95
	st_list: SHIFT; goto 70
	block: SHIFT; goto 68
68:	RBRACE: SHIFT; goto 69
69:	RBRACE: REDUCE primary = LBRACE block.b RBRACE
	RPAREN: REDUCE primary = LBRACE block.b RBRACE
	MINUS: REDUCE primary = LBRACE block.b RBRACE
	COMMA: REDUCE primary = LBRACE block.b RBRACE
	SEMI: REDUCE primary = LBRACE block.b RBRACE
	CASE: REDUCE primary = LBRACE block.b RBRACE
	ELSE: REDUCE primary = LBRACE block.b RBRACE
	LE: REDUCE primary = LBRACE block.b RBRACE
	LT: REDUCE primary = LBRACE block.b RBRACE
	EQUALS: REDUCE primary = LBRACE block.b RBRACE
	PLUS: REDUCE primary = LBRACE block.b RBRACE
	TIMES: REDUCE primary = LBRACE block.b RBRACE
	DIV: REDUCE primary = LBRACE block.b RBRACE
	DOT: REDUCE primary = LBRACE block.b RBRACE
	MATCH: REDUCE primary = LBRACE block.b RBRACE
70:	MINUS: SHIFT; goto 113
	LBRACE: SHIFT; goto 67
	LPAREN: SHIFT; goto 105
	ID: SHIFT; goto 100
	NULL: SHIFT; goto 109
	NEW: SHIFT; goto 118
	THIS: SHIFT; goto 103
	SUPER: SHIFT; goto 40
	NOT: SHIFT; goto 116
	INTEGER: SHIFT; goto 110
	STRING: SHIFT; goto 111
	BOOLEAN: SHIFT; goto 112
	IF: SHIFT; goto 32
	WHILE: SHIFT; goto 50
	VAR: SHIFT; goto 75
	lexpr: SHIFT; goto 29
	primary: SHIFT; goto 81
	ident: SHIFT; goto 49
	product: SHIFT; goto 127
	sum: SHIFT; goto 121
	equiv: SHIFT; goto 104
	rexpr: SHIFT; goto 39
	rel: SHIFT; goto 55
	expr: SHIFT; goto 71
	new_var: SHIFT; goto 73
71:	RBRACE: REDUCE block = st_list.el expr.e
	SEMI: SHIFT; goto 72
	CASE: REDUCE block = st_list.el expr.e
72:	MINUS: REDUCE st_list = st_list.el expr.e SEMI
	LBRACE: REDUCE st_list = st_list.el expr.e SEMI
	LPAREN: REDUCE st_list = st_list.el expr.e SEMI
	ID: REDUCE st_list = st_list.el expr.e SEMI
	NULL: REDUCE st_list = st_list.el expr.e SEMI
	NEW: REDUCE st_list = st_list.el expr.e SEMI
	THIS: REDUCE st_list = st_list.el expr.e SEMI
	SUPER: REDUCE st_list = st_list.el expr.e SEMI
	NOT: REDUCE st_list = st_list.el expr.e SEMI
	INTEGER: REDUCE st_list = st_list.el expr.e SEMI
	STRING: REDUCE st_list = st_list.el expr.e SEMI
	BOOLEAN: REDUCE st_list = st_list.el expr.e SEMI
	IF: REDUCE st_list = st_list.el expr.e SEMI
	WHILE: REDUCE st_list = st_list.el expr.e SEMI
	VAR: REDUCE st_list = st_list.el expr.e SEMI
73:	SEMI: SHIFT; goto 74
74:	MINUS: REDUCE st_list = st_list.el new_var.ve SEMI
	LBRACE: REDUCE st_list = st_list.el new_var.ve SEMI
	LPAREN: REDUCE st_list = st_list.el new_var.ve SEMI
	ID: REDUCE st_list = st_list.el new_var.ve SEMI
	NULL: REDUCE st_list = st_list.el new_var.ve SEMI
	NEW: REDUCE st_list = st_list.el new_var.ve SEMI
	THIS: REDUCE st_list = st_list.el new_var.ve SEMI
	SUPER: REDUCE st_list = st_list.el new_var.ve SEMI
	NOT: REDUCE st_list = st_list.el new_var.ve SEMI
	INTEGER: REDUCE st_list = st_list.el new_var.ve SEMI
	STRING: REDUCE st_list = st_list.el new_var.ve SEMI
	BOOLEAN: REDUCE st_list = st_list.el new_var.ve SEMI
	IF: REDUCE st_list = st_list.el new_var.ve SEMI
	WHILE: REDUCE st_list = st_list.el new_var.ve SEMI
	VAR: REDUCE st_list = st_list.el new_var.ve SEMI
75:	ID: SHIFT; goto 76
76:	COLON: SHIFT; goto 77
77:	TYPE: SHIFT; goto 78
78:	ASSIGN: SHIFT; goto 79
79:	MINUS: SHIFT; goto 113
	LBRACE: SHIFT; goto 67
	LPAREN: SHIFT; goto 105
	ID: SHIFT; goto 100
	NULL: SHIFT; goto 109
	NEW: SHIFT; goto 118
	THIS: SHIFT; goto 103
	SUPER: SHIFT; goto 40
	NOT: SHIFT; goto 116
	INTEGER: SHIFT; goto 110
	STRING: SHIFT; goto 111
	BOOLEAN: SHIFT; goto 112
	IF: SHIFT; goto 32
	WHILE: SHIFT; goto 50
	lexpr: SHIFT; goto 29
	primary: SHIFT; goto 81
	ident: SHIFT; goto 49
	product: SHIFT; goto 127
	sum: SHIFT; goto 121
	equiv: SHIFT; goto 104
	rexpr: SHIFT; goto 39
	rel: SHIFT; goto 55
	expr: SHIFT; goto 80
80:	SEMI: REDUCE new_var = VAR ID.id COLON TYPE.t ASSIGN expr.e
81:	RBRACE: REDUCE product = primary.p
	RPAREN: REDUCE product = primary.p
	MINUS: REDUCE product = primary.p
	COMMA: REDUCE product = primary.p
	SEMI: REDUCE product = primary.p
	CASE: REDUCE product = primary.p
	ELSE: REDUCE product = primary.p
	LE: REDUCE product = primary.p
	LT: REDUCE product = primary.p
	EQUALS: REDUCE product = primary.p
	PLUS: REDUCE product = primary.p
	TIMES: REDUCE product = primary.p
	DIV: REDUCE product = primary.p
	DOT: SHIFT; goto 64
	MATCH: SHIFT; goto 82
82:	LBRACE: SHIFT; goto 84
	cases: SHIFT; goto 83
83:	RBRACE: REDUCE rexpr = primary.p MATCH cases.c
	RPAREN: REDUCE rexpr = primary.p MATCH cases.c
	COMMA: REDUCE rexpr = primary.p MATCH cases.c
	SEMI: REDUCE rexpr = primary.p MATCH cases.c
	CASE: REDUCE rexpr = primary.p MATCH cases.c
	ELSE: REDUCE rexpr = primary.p MATCH cases.c
84:	RBRACE: REDUCE empty = 
	CASE: SHIFT; goto 87
	empty: SHIFT; goto 94
	case_block: SHIFT; goto 85
85:	RBRACE: SHIFT; goto 86
86:	RBRACE: REDUCE cases = LBRACE case_block.cb RBRACE
	RPAREN: REDUCE cases = LBRACE case_block.cb RBRACE
	COMMA: REDUCE cases = LBRACE case_block.cb RBRACE
	SEMI: REDUCE cases = LBRACE case_block.cb RBRACE
	CASE: REDUCE cases = LBRACE case_block.cb RBRACE
	ELSE: REDUCE cases = LBRACE case_block.cb RBRACE
87:	ID: SHIFT; goto 88
	NULL: SHIFT; goto 96
88:	COLON: SHIFT; goto 89
89:	TYPE: SHIFT; goto 90
90:	ARROW: SHIFT; goto 91
91:	RBRACE: REDUCE empty = 
	MINUS: REDUCE empty = 
	LBRACE: REDUCE empty = 
	CASE: REDUCE empty = 
	LPAREN: REDUCE empty = 
	ID: REDUCE empty = 
	NULL: REDUCE empty = 
	NEW: REDUCE empty = 
	THIS: REDUCE empty = 
	SUPER: REDUCE empty = 
	NOT: REDUCE empty = 
	INTEGER: REDUCE empty = 
	STRING: REDUCE empty = 
	BOOLEAN: REDUCE empty = 
	IF: REDUCE empty = 
	WHILE: REDUCE empty = 
	VAR: REDUCE empty = 
	empty: SHIFT; goto 95
	st_list: SHIFT; goto 70
	block: SHIFT; goto 92
92:	RBRACE: REDUCE empty = 
	CASE: SHIFT; goto 87
	empty: SHIFT; goto 94
	case_block: SHIFT; goto 93
93:	RBRACE: REDUCE case_block = CASE ID.id COLON TYPE.t ARROW block.b case_block.cb
94:	RBRACE: REDUCE case_block = empty
95:	RBRACE: REDUCE block = empty
	MINUS: REDUCE st_list = empty
	LBRACE: REDUCE st_list = empty
	CASE: REDUCE block = empty
	LPAREN: REDUCE st_list = empty
	ID: REDUCE st_list = empty
	NULL: REDUCE st_list = empty
	NEW: REDUCE st_list = empty
	THIS: REDUCE st_list = empty
	SUPER: REDUCE st_list = empty
	NOT: REDUCE st_list = empty
	INTEGER: REDUCE st_list = empty
	STRING: REDUCE st_list = empty
	BOOLEAN: REDUCE st_list = empty
	IF: REDUCE st_list = empty
	WHILE: REDUCE st_list = empty
	VAR: REDUCE st_list = empty
96:	ARROW: SHIFT; goto 97
97:	RBRACE: REDUCE empty = 
	MINUS: REDUCE empty = 
	LBRACE: REDUCE empty = 
	CASE: REDUCE empty = 
	LPAREN: REDUCE empty = 
	ID: REDUCE empty = 
	NULL: REDUCE empty = 
	NEW: REDUCE empty = 
	THIS: REDUCE empty = 
	SUPER: REDUCE empty = 
	NOT: REDUCE empty = 
	INTEGER: REDUCE empty = 
	STRING: REDUCE empty = 
	BOOLEAN: REDUCE empty = 
	IF: REDUCE empty = 
	WHILE: REDUCE empty = 
	VAR: REDUCE empty = 
	empty: SHIFT; goto 95
	st_list: SHIFT; goto 70
	block: SHIFT; goto 98
98:	RBRACE: REDUCE empty = 
	CASE: SHIFT; goto 87
	empty: SHIFT; goto 94
	case_block: SHIFT; goto 99
99:	RBRACE: REDUCE case_block = CASE NULL ARROW block.b case_block.cb
100:	RBRACE: REDUCE opt$actuals = 
	RPAREN: REDUCE opt$actuals = 
	MINUS: REDUCE opt$actuals = 
	COMMA: REDUCE opt$actuals = 
	SEMI: REDUCE opt$actuals = 
	CASE: REDUCE opt$actuals = 
	ELSE: REDUCE opt$actuals = 
	LPAREN: SHIFT; goto 44
	LE: REDUCE opt$actuals = 
	LT: REDUCE opt$actuals = 
	EQUALS: REDUCE opt$actuals = 
	PLUS: REDUCE opt$actuals = 
	TIMES: REDUCE opt$actuals = 
	DIV: REDUCE opt$actuals = 
	DOT: REDUCE opt$actuals = 
	MATCH: REDUCE opt$actuals = 
	ASSIGN: REDUCE opt$actuals = 
	actuals: SHIFT; goto 102
	opt$actuals: SHIFT; goto 101
101:	RBRACE: REDUCE ident = ID.id opt$actuals
	RPAREN: REDUCE ident = ID.id opt$actuals
	MINUS: REDUCE ident = ID.id opt$actuals
	COMMA: REDUCE ident = ID.id opt$actuals
	SEMI: REDUCE ident = ID.id opt$actuals
	CASE: REDUCE ident = ID.id opt$actuals
	ELSE: REDUCE ident = ID.id opt$actuals
	LE: REDUCE ident = ID.id opt$actuals
	LT: REDUCE ident = ID.id opt$actuals
	EQUALS: REDUCE ident = ID.id opt$actuals
	PLUS: REDUCE ident = ID.id opt$actuals
	TIMES: REDUCE ident = ID.id opt$actuals
	DIV: REDUCE ident = ID.id opt$actuals
	DOT: REDUCE ident = ID.id opt$actuals
	MATCH: REDUCE ident = ID.id opt$actuals
	ASSIGN: REDUCE ident = ID.id opt$actuals
102:	RBRACE: REDUCE opt$actuals = actuals
	RPAREN: REDUCE opt$actuals = actuals
	MINUS: REDUCE opt$actuals = actuals
	COMMA: REDUCE opt$actuals = actuals
	SEMI: REDUCE opt$actuals = actuals
	CASE: REDUCE opt$actuals = actuals
	ELSE: REDUCE opt$actuals = actuals
	LE: REDUCE opt$actuals = actuals
	LT: REDUCE opt$actuals = actuals
	EQUALS: REDUCE opt$actuals = actuals
	PLUS: REDUCE opt$actuals = actuals
	TIMES: REDUCE opt$actuals = actuals
	DIV: REDUCE opt$actuals = actuals
	DOT: REDUCE opt$actuals = actuals
	MATCH: REDUCE opt$actuals = actuals
	ASSIGN: REDUCE opt$actuals = actuals
103:	RBRACE: REDUCE ident = THIS
	RPAREN: REDUCE ident = THIS
	MINUS: REDUCE ident = THIS
	COMMA: REDUCE ident = THIS
	SEMI: REDUCE ident = THIS
	CASE: REDUCE ident = THIS
	ELSE: REDUCE ident = THIS
	LE: REDUCE ident = THIS
	LT: REDUCE ident = THIS
	EQUALS: REDUCE ident = THIS
	PLUS: REDUCE ident = THIS
	TIMES: REDUCE ident = THIS
	DIV: REDUCE ident = THIS
	DOT: REDUCE ident = THIS
	MATCH: REDUCE ident = THIS
	ASSIGN: REDUCE ident = THIS
104:	RBRACE: REDUCE rel = equiv.e
	RPAREN: REDUCE rel = equiv.e
	COMMA: REDUCE rel = equiv.e
	SEMI: REDUCE rel = equiv.e
	CASE: REDUCE rel = equiv.e
	ELSE: REDUCE rel = equiv.e
	LE: REDUCE rel = equiv.e
	LT: REDUCE rel = equiv.e
	EQUALS: SHIFT; goto 58
105:	RPAREN: SHIFT; goto 108
	MINUS: SHIFT; goto 113
	LBRACE: SHIFT; goto 67
	LPAREN: SHIFT; goto 105
	ID: SHIFT; goto 100
	NULL: SHIFT; goto 109
	NEW: SHIFT; goto 118
	THIS: SHIFT; goto 103
	SUPER: SHIFT; goto 40
	NOT: SHIFT; goto 116
	INTEGER: SHIFT; goto 110
	STRING: SHIFT; goto 111
	BOOLEAN: SHIFT; goto 112
	IF: SHIFT; goto 32
	WHILE: SHIFT; goto 50
	lexpr: SHIFT; goto 29
	primary: SHIFT; goto 81
	ident: SHIFT; goto 49
	product: SHIFT; goto 127
	sum: SHIFT; goto 121
	equiv: SHIFT; goto 104
	rexpr: SHIFT; goto 39
	rel: SHIFT; goto 55
	expr: SHIFT; goto 106
106:	RPAREN: SHIFT; goto 107
107:	RBRACE: REDUCE primary = LPAREN expr.e RPAREN
	RPAREN: REDUCE primary = LPAREN expr.e RPAREN
	MINUS: REDUCE primary = LPAREN expr.e RPAREN
	COMMA: REDUCE primary = LPAREN expr.e RPAREN
	SEMI: REDUCE primary = LPAREN expr.e RPAREN
	CASE: REDUCE primary = LPAREN expr.e RPAREN
	ELSE: REDUCE primary = LPAREN expr.e RPAREN
	LE: REDUCE primary = LPAREN expr.e RPAREN
	LT: REDUCE primary = LPAREN expr.e RPAREN
	EQUALS: REDUCE primary = LPAREN expr.e RPAREN
	PLUS: REDUCE primary = LPAREN expr.e RPAREN
	TIMES: REDUCE primary = LPAREN expr.e RPAREN
	DIV: REDUCE primary = LPAREN expr.e RPAREN
	DOT: REDUCE primary = LPAREN expr.e RPAREN
	MATCH: REDUCE primary = LPAREN expr.e RPAREN
108:	RBRACE: REDUCE primary = LPAREN RPAREN
	RPAREN: REDUCE primary = LPAREN RPAREN
	MINUS: REDUCE primary = LPAREN RPAREN
	COMMA: REDUCE primary = LPAREN RPAREN
	SEMI: REDUCE primary = LPAREN RPAREN
	CASE: REDUCE primary = LPAREN RPAREN
	ELSE: REDUCE primary = LPAREN RPAREN
	LE: REDUCE primary = LPAREN RPAREN
	LT: REDUCE primary = LPAREN RPAREN
	EQUALS: REDUCE primary = LPAREN RPAREN
	PLUS: REDUCE primary = LPAREN RPAREN
	TIMES: REDUCE primary = LPAREN RPAREN
	DIV: REDUCE primary = LPAREN RPAREN
	DOT: REDUCE primary = LPAREN RPAREN
	MATCH: REDUCE primary = LPAREN RPAREN
109:	RBRACE: REDUCE primary = NULL
	RPAREN: REDUCE primary = NULL
	MINUS: REDUCE primary = NULL
	COMMA: REDUCE primary = NULL
	SEMI: REDUCE primary = NULL
	CASE: REDUCE primary = NULL
	ELSE: REDUCE primary = NULL
	LE: REDUCE primary = NULL
	LT: REDUCE primary = NULL
	EQUALS: REDUCE primary = NULL
	PLUS: REDUCE primary = NULL
	TIMES: REDUCE primary = NULL
	DIV: REDUCE primary = NULL
	DOT: REDUCE primary = NULL
	MATCH: REDUCE primary = NULL
110:	RBRACE: REDUCE primary = INTEGER.i
	RPAREN: REDUCE primary = INTEGER.i
	MINUS: REDUCE primary = INTEGER.i
	COMMA: REDUCE primary = INTEGER.i
	SEMI: REDUCE primary = INTEGER.i
	CASE: REDUCE primary = INTEGER.i
	ELSE: REDUCE primary = INTEGER.i
	LE: REDUCE primary = INTEGER.i
	LT: REDUCE primary = INTEGER.i
	EQUALS: REDUCE primary = INTEGER.i
	PLUS: REDUCE primary = INTEGER.i
	TIMES: REDUCE primary = INTEGER.i
	DIV: REDUCE primary = INTEGER.i
	DOT: REDUCE primary = INTEGER.i
	MATCH: REDUCE primary = INTEGER.i
111:	RBRACE: REDUCE primary = STRING.s
	RPAREN: REDUCE primary = STRING.s
	MINUS: REDUCE primary = STRING.s
	COMMA: REDUCE primary = STRING.s
	SEMI: REDUCE primary = STRING.s
	CASE: REDUCE primary = STRING.s
	ELSE: REDUCE primary = STRING.s
	LE: REDUCE primary = STRING.s
	LT: REDUCE primary = STRING.s
	EQUALS: REDUCE primary = STRING.s
	PLUS: REDUCE primary = STRING.s
	TIMES: REDUCE primary = STRING.s
	DIV: REDUCE primary = STRING.s
	DOT: REDUCE primary = STRING.s
	MATCH: REDUCE primary = STRING.s
112:	RBRACE: REDUCE primary = BOOLEAN.b
	RPAREN: REDUCE primary = BOOLEAN.b
	MINUS: REDUCE primary = BOOLEAN.b
	COMMA: REDUCE primary = BOOLEAN.b
	SEMI: REDUCE primary = BOOLEAN.b
	CASE: REDUCE primary = BOOLEAN.b
	ELSE: REDUCE primary = BOOLEAN.b
	LE: REDUCE primary = BOOLEAN.b
	LT: REDUCE primary = BOOLEAN.b
	EQUALS: REDUCE primary = BOOLEAN.b
	PLUS: REDUCE primary = BOOLEAN.b
	TIMES: REDUCE primary = BOOLEAN.b
	DIV: REDUCE primary = BOOLEAN.b
	DOT: REDUCE primary = BOOLEAN.b
	MATCH: REDUCE primary = BOOLEAN.b
113:	MINUS: SHIFT; goto 113
	LBRACE: SHIFT; goto 67
	LPAREN: SHIFT; goto 105
	ID: SHIFT; goto 100
	NULL: SHIFT; goto 109
	NEW: SHIFT; goto 118
	THIS: SHIFT; goto 103
	SUPER: SHIFT; goto 40
	NOT: SHIFT; goto 116
	INTEGER: SHIFT; goto 110
	STRING: SHIFT; goto 111
	BOOLEAN: SHIFT; goto 112
	lexpr: SHIFT; goto 115
	primary: SHIFT; goto 114
	ident: SHIFT; goto 49
114:	RBRACE: REDUCE primary = MINUS primary.p
	RPAREN: REDUCE primary = MINUS primary.p
	MINUS: REDUCE primary = MINUS primary.p
	COMMA: REDUCE primary = MINUS primary.p
	SEMI: REDUCE primary = MINUS primary.p
	CASE: REDUCE primary = MINUS primary.p
	ELSE: REDUCE primary = MINUS primary.p
	LE: REDUCE primary = MINUS primary.p
	LT: REDUCE primary = MINUS primary.p
	EQUALS: REDUCE primary = MINUS primary.p
	PLUS: REDUCE primary = MINUS primary.p
	TIMES: REDUCE primary = MINUS primary.p
	DIV: REDUCE primary = MINUS primary.p
	DOT: SHIFT; goto 64
	MATCH: REDUCE primary = MINUS primary.p
115:	RBRACE: REDUCE primary = lexpr.e
	RPAREN: REDUCE primary = lexpr.e
	MINUS: REDUCE primary = lexpr.e
	COMMA: REDUCE primary = lexpr.e
	SEMI: REDUCE primary = lexpr.e
	CASE: REDUCE primary = lexpr.e
	ELSE: REDUCE primary = lexpr.e
	LE: REDUCE primary = lexpr.e
	LT: REDUCE primary = lexpr.e
	EQUALS: REDUCE primary = lexpr.e
	PLUS: REDUCE primary = lexpr.e
	TIMES: REDUCE primary = lexpr.e
	DIV: REDUCE primary = lexpr.e
	DOT: REDUCE primary = lexpr.e
	MATCH: REDUCE primary = lexpr.e
116:	MINUS: SHIFT; goto 113
	LBRACE: SHIFT; goto 67
	LPAREN: SHIFT; goto 105
	ID: SHIFT; goto 100
	NULL: SHIFT; goto 109
	NEW: SHIFT; goto 118
	THIS: SHIFT; goto 103
	SUPER: SHIFT; goto 40
	NOT: SHIFT; goto 116
	INTEGER: SHIFT; goto 110
	STRING: SHIFT; goto 111
	BOOLEAN: SHIFT; goto 112
	lexpr: SHIFT; goto 115
	primary: SHIFT; goto 117
	ident: SHIFT; goto 49
117:	RBRACE: REDUCE primary = NOT primary.p
	RPAREN: REDUCE primary = NOT primary.p
	MINUS: REDUCE primary = NOT primary.p
	COMMA: REDUCE primary = NOT primary.p
	SEMI: REDUCE primary = NOT primary.p
	CASE: REDUCE primary = NOT primary.p
	ELSE: REDUCE primary = NOT primary.p
	LE: REDUCE primary = NOT primary.p
	LT: REDUCE primary = NOT primary.p
	EQUALS: REDUCE primary = NOT primary.p
	PLUS: REDUCE primary = NOT primary.p
	TIMES: REDUCE primary = NOT primary.p
	DIV: REDUCE primary = NOT primary.p
	DOT: SHIFT; goto 64
	MATCH: REDUCE primary = NOT primary.p
118:	TYPE: SHIFT; goto 119
119:	LPAREN: SHIFT; goto 44
	actuals: SHIFT; goto 120
120:	RBRACE: REDUCE primary = NEW TYPE.t actuals.s
	RPAREN: REDUCE primary = NEW TYPE.t actuals.s
	MINUS: REDUCE primary = NEW TYPE.t actuals.s
	COMMA: REDUCE primary = NEW TYPE.t actuals.s
	SEMI: REDUCE primary = NEW TYPE.t actuals.s
	CASE: REDUCE primary = NEW TYPE.t actuals.s
	ELSE: REDUCE primary = NEW TYPE.t actuals.s
	LE: REDUCE primary = NEW TYPE.t actuals.s
	LT: REDUCE primary = NEW TYPE.t actuals.s
	EQUALS: REDUCE primary = NEW TYPE.t actuals.s
	PLUS: REDUCE primary = NEW TYPE.t actuals.s
	TIMES: REDUCE primary = NEW TYPE.t actuals.s
	DIV: REDUCE primary = NEW TYPE.t actuals.s
	DOT: REDUCE primary = NEW TYPE.t actuals.s
	MATCH: REDUCE primary = NEW TYPE.t actuals.s
121:	RBRACE: REDUCE equiv = sum.s
	RPAREN: REDUCE equiv = sum.s
	MINUS: SHIFT; goto 122
	COMMA: REDUCE equiv = sum.s
	SEMI: REDUCE equiv = sum.s
	CASE: REDUCE equiv = sum.s
	ELSE: REDUCE equiv = sum.s
	LE: REDUCE equiv = sum.s
	LT: REDUCE equiv = sum.s
	EQUALS: REDUCE equiv = sum.s
	PLUS: SHIFT; goto 60
122:	MINUS: SHIFT; goto 113
	LBRACE: SHIFT; goto 67
	LPAREN: SHIFT; goto 105
	ID: SHIFT; goto 100
	NULL: SHIFT; goto 109
	NEW: SHIFT; goto 118
	THIS: SHIFT; goto 103
	SUPER: SHIFT; goto 40
	NOT: SHIFT; goto 116
	INTEGER: SHIFT; goto 110
	STRING: SHIFT; goto 111
	BOOLEAN: SHIFT; goto 112
	lexpr: SHIFT; goto 115
	primary: SHIFT; goto 126
	ident: SHIFT; goto 49
	product: SHIFT; goto 123
123:	RBRACE: REDUCE sum = sum.s MINUS product.p
	RPAREN: REDUCE sum = sum.s MINUS product.p
	MINUS: REDUCE sum = sum.s MINUS product.p
	COMMA: REDUCE sum = sum.s MINUS product.p
	SEMI: REDUCE sum = sum.s MINUS product.p
	CASE: REDUCE sum = sum.s MINUS product.p
	ELSE: REDUCE sum = sum.s MINUS product.p
	LE: REDUCE sum = sum.s MINUS product.p
	LT: REDUCE sum = sum.s MINUS product.p
	EQUALS: REDUCE sum = sum.s MINUS product.p
	PLUS: REDUCE sum = sum.s MINUS product.p
	TIMES: SHIFT; goto 62
	DIV: SHIFT; goto 124
124:	MINUS: SHIFT; goto 113
	LBRACE: SHIFT; goto 67
	LPAREN: SHIFT; goto 105
	ID: SHIFT; goto 100
	NULL: SHIFT; goto 109
	NEW: SHIFT; goto 118
	THIS: SHIFT; goto 103
	SUPER: SHIFT; goto 40
	NOT: SHIFT; goto 116
	INTEGER: SHIFT; goto 110
	STRING: SHIFT; goto 111
	BOOLEAN: SHIFT; goto 112
	lexpr: SHIFT; goto 115
	primary: SHIFT; goto 125
	ident: SHIFT; goto 49
125:	RBRACE: REDUCE product = product.p DIV primary.i
	RPAREN: REDUCE product = product.p DIV primary.i
	MINUS: REDUCE product = product.p DIV primary.i
	COMMA: REDUCE product = product.p DIV primary.i
	SEMI: REDUCE product = product.p DIV primary.i
	CASE: REDUCE product = product.p DIV primary.i
	ELSE: REDUCE product = product.p DIV primary.i
	LE: REDUCE product = product.p DIV primary.i
	LT: REDUCE product = product.p DIV primary.i
	EQUALS: REDUCE product = product.p DIV primary.i
	PLUS: REDUCE product = product.p DIV primary.i
	TIMES: REDUCE product = product.p DIV primary.i
	DIV: REDUCE product = product.p DIV primary.i
	DOT: SHIFT; goto 64
126:	RBRACE: REDUCE product = primary.p
	RPAREN: REDUCE product = primary.p
	MINUS: REDUCE product = primary.p
	COMMA: REDUCE product = primary.p
	SEMI: REDUCE product = primary.p
	CASE: REDUCE product = primary.p
	ELSE: REDUCE product = primary.p
	LE: REDUCE product = primary.p
	LT: REDUCE product = primary.p
	EQUALS: REDUCE product = primary.p
	PLUS: REDUCE product = primary.p
	TIMES: REDUCE product = primary.p
	DIV: REDUCE product = primary.p
	DOT: SHIFT; goto 64
127:	RBRACE: REDUCE sum = product.p
	RPAREN: REDUCE sum = product.p
	MINUS: REDUCE sum = product.p
	COMMA: REDUCE sum = product.p
	SEMI: REDUCE sum = product.p
	CASE: REDUCE sum = product.p
	ELSE: REDUCE sum = product.p
	LE: REDUCE sum = product.p
	LT: REDUCE sum = product.p
	EQUALS: REDUCE sum = product.p
	PLUS: REDUCE sum = product.p
	TIMES: SHIFT; goto 62
	DIV: SHIFT; goto 124
128:	MINUS: SHIFT; goto 113
	LBRACE: SHIFT; goto 67
	LPAREN: SHIFT; goto 105
	ID: SHIFT; goto 100
	NULL: SHIFT; goto 109
	NEW: SHIFT; goto 118
	THIS: SHIFT; goto 103
	SUPER: SHIFT; goto 40
	NOT: SHIFT; goto 116
	INTEGER: SHIFT; goto 110
	STRING: SHIFT; goto 111
	BOOLEAN: SHIFT; goto 112
	lexpr: SHIFT; goto 115
	primary: SHIFT; goto 126
	ident: SHIFT; goto 49
	product: SHIFT; goto 127
	sum: SHIFT; goto 121
	equiv: SHIFT; goto 129
129:	RBRACE: REDUCE rel = rel.r LT equiv.e
	RPAREN: REDUCE rel = rel.r LT equiv.e
	COMMA: REDUCE rel = rel.r LT equiv.e
	SEMI: REDUCE rel = rel.r LT equiv.e
	CASE: REDUCE rel = rel.r LT equiv.e
	ELSE: REDUCE rel = rel.r LT equiv.e
	LE: REDUCE rel = rel.r LT equiv.e
	LT: REDUCE rel = rel.r LT equiv.e
	EQUALS: SHIFT; goto 58
130:	RPAREN: REDUCE exp_list = expr.e
	COMMA: REDUCE exp_list = expr.e
131:	RPAREN: REDUCE exp_list = empty
	COMMA: REDUCE exp_list = empty
132:	RPAREN: REDUCE empty = 
	COMMA: REDUCE empty = 
	ID: SHIFT; goto 137
	empty: SHIFT; goto 141
	formal: SHIFT; goto 140
	formal_list: SHIFT; goto 133
133:	RPAREN: SHIFT; goto 134
	COMMA: SHIFT; goto 135
134:	COLON: REDUCE formals = LPAREN formal_list.fl RPAREN
135:	ID: SHIFT; goto 137
	formal: SHIFT; goto 136
136:	RPAREN: REDUCE formal_list = formal_list.fl COMMA formal.f
	COMMA: REDUCE formal_list = formal_list.fl COMMA formal.f
137:	COLON: SHIFT; goto 138
138:	TYPE: SHIFT; goto 139
139:	RPAREN: REDUCE formal = ID.id COLON TYPE.t
	COMMA: REDUCE formal = ID.id COLON TYPE.t
140:	RPAREN: REDUCE formal_list = formal.f
	COMMA: REDUCE formal_list = formal.f
141:	RPAREN: REDUCE formal_list = empty
	COMMA: REDUCE formal_list = empty
142:	ID: SHIFT; goto 143
143:	LPAREN: SHIFT; goto 132
	formals: SHIFT; goto 144
144:	COLON: SHIFT; goto 145
145:	TYPE: SHIFT; goto 146
146:	ASSIGN: SHIFT; goto 147
147:	MINUS: SHIFT; goto 113
	LBRACE: SHIFT; goto 67
	LPAREN: SHIFT; goto 105
	ID: SHIFT; goto 100
	NULL: SHIFT; goto 109
	NEW: SHIFT; goto 118
	THIS: SHIFT; goto 103
	SUPER: SHIFT; goto 40
	NOT: SHIFT; goto 116
	INTEGER: SHIFT; goto 110
	STRING: SHIFT; goto 111
	BOOLEAN: SHIFT; goto 112
	IF: SHIFT; goto 32
	WHILE: SHIFT; goto 50
	NATIVE: SHIFT; goto 28
	lexpr: SHIFT; goto 29
	primary: SHIFT; goto 81
	ident: SHIFT; goto 49
	product: SHIFT; goto 127
	sum: SHIFT; goto 121
	equiv: SHIFT; goto 104
	rexpr: SHIFT; goto 39
	rel: SHIFT; goto 55
	expr: SHIFT; goto 27
	expr_or_native: SHIFT; goto 148
148:	SEMI: SHIFT; goto 149
149:	RBRACE: REDUCE feature = DEF ID.id formals.fl COLON TYPE.t ASSIGN expr_or_native.e SEMI
	LBRACE: REDUCE feature = DEF ID.id formals.fl COLON TYPE.t ASSIGN expr_or_native.e SEMI
	VAR: REDUCE feature = DEF ID.id formals.fl COLON TYPE.t ASSIGN expr_or_native.e SEMI
	DEF: REDUCE feature = DEF ID.id formals.fl COLON TYPE.t ASSIGN expr_or_native.e SEMI
	OVERRIDE: REDUCE feature = DEF ID.id formals.fl COLON TYPE.t ASSIGN expr_or_native.e SEMI
150:	ID: SHIFT; goto 151
151:	ASSIGN: SHIFT; goto 152
	COLON: SHIFT; goto 155
152:	NATIVE: SHIFT; goto 153
153:	SEMI: SHIFT; goto 154
154:	RBRACE: REDUCE feature = VAR ID.id ASSIGN NATIVE SEMI
	LBRACE: REDUCE feature = VAR ID.id ASSIGN NATIVE SEMI
	VAR: REDUCE feature = VAR ID.id ASSIGN NATIVE SEMI
	DEF: REDUCE feature = VAR ID.id ASSIGN NATIVE SEMI
	OVERRIDE: REDUCE feature = VAR ID.id ASSIGN NATIVE SEMI
155:	TYPE: SHIFT; goto 156
156:	ASSIGN: SHIFT; goto 157
157:	MINUS: SHIFT; goto 113
	LBRACE: SHIFT; goto 67
	LPAREN: SHIFT; goto 105
	ID: SHIFT; goto 100
	NULL: SHIFT; goto 109
	NEW: SHIFT; goto 118
	THIS: SHIFT; goto 103
	SUPER: SHIFT; goto 40
	NOT: SHIFT; goto 116
	INTEGER: SHIFT; goto 110
	STRING: SHIFT; goto 111
	BOOLEAN: SHIFT; goto 112
	IF: SHIFT; goto 32
	WHILE: SHIFT; goto 50
	lexpr: SHIFT; goto 29
	primary: SHIFT; goto 81
	ident: SHIFT; goto 49
	product: SHIFT; goto 127
	sum: SHIFT; goto 121
	equiv: SHIFT; goto 104
	rexpr: SHIFT; goto 39
	rel: SHIFT; goto 55
	expr: SHIFT; goto 158
158:	SEMI: SHIFT; goto 159
159:	RBRACE: REDUCE feature = VAR ID.id COLON TYPE.t ASSIGN expr.e SEMI
	LBRACE: REDUCE feature = VAR ID.id COLON TYPE.t ASSIGN expr.e SEMI
	VAR: REDUCE feature = VAR ID.id COLON TYPE.t ASSIGN expr.e SEMI
	DEF: REDUCE feature = VAR ID.id COLON TYPE.t ASSIGN expr.e SEMI
	OVERRIDE: REDUCE feature = VAR ID.id COLON TYPE.t ASSIGN expr.e SEMI
160:	RBRACE: REDUCE empty = 
	MINUS: REDUCE empty = 
	LBRACE: REDUCE empty = 
	LPAREN: REDUCE empty = 
	ID: REDUCE empty = 
	NULL: REDUCE empty = 
	NEW: REDUCE empty = 
	THIS: REDUCE empty = 
	SUPER: REDUCE empty = 
	NOT: REDUCE empty = 
	INTEGER: REDUCE empty = 
	STRING: REDUCE empty = 
	BOOLEAN: REDUCE empty = 
	IF: REDUCE empty = 
	WHILE: REDUCE empty = 
	VAR: REDUCE empty = 
	empty: SHIFT; goto 95
	st_list: SHIFT; goto 70
	block: SHIFT; goto 161
161:	RBRACE: SHIFT; goto 162
162:	SEMI: SHIFT; goto 163
163:	RBRACE: REDUCE feature = LBRACE block.b RBRACE SEMI
	LBRACE: REDUCE feature = LBRACE block.b RBRACE SEMI
	VAR: REDUCE feature = LBRACE block.b RBRACE SEMI
	DEF: REDUCE feature = LBRACE block.b RBRACE SEMI
	OVERRIDE: REDUCE feature = LBRACE block.b RBRACE SEMI
164:	TYPE: SHIFT; goto 166
	NATIVE: SHIFT; goto 168
	type_or_native: SHIFT; goto 165
165:	LBRACE: REDUCE have_extends = EXTENDS type_or_native.ext
166:	LPAREN: SHIFT; goto 44
	actuals: SHIFT; goto 167
167:	LBRACE: REDUCE type_or_native = TYPE.t actuals.a
168:	LBRACE: REDUCE type_or_native = NATIVE
169:	LBRACE: REDUCE have_extends = empty
170:	RPAREN: SHIFT; goto 171
	COMMA: REDUCE empty = 
	VAR: SHIFT; goto 176
	empty: SHIFT; goto 181
	one_var: SHIFT; goto 180
	var_list: SHIFT; goto 172
171:	LBRACE: REDUCE varformals = LPAREN RPAREN
	EXTENDS: REDUCE varformals = LPAREN RPAREN
172:	RPAREN: SHIFT; goto 173
	COMMA: SHIFT; goto 174
173:	LBRACE: REDUCE varformals = LPAREN var_list.vl RPAREN
	EXTENDS: REDUCE varformals = LPAREN var_list.vl RPAREN
174:	VAR: SHIFT; goto 176
	one_var: SHIFT; goto 175
175:	RPAREN: REDUCE var_list = var_list.vl COMMA one_var.v
	COMMA: REDUCE var_list = var_list.vl COMMA one_var.v
176:	ID: SHIFT; goto 177
177:	COLON: SHIFT; goto 178
178:	TYPE: SHIFT; goto 179
179:	RPAREN: REDUCE one_var = VAR ID.id COLON TYPE.t
	COMMA: REDUCE one_var = VAR ID.id COLON TYPE.t
180:	RPAREN: REDUCE var_list = one_var.v
	COMMA: REDUCE var_list = one_var.v
181:	RPAREN: REDUCE var_list = empty
	COMMA: REDUCE var_list = empty
182:	LBRACE: REDUCE varformals = empty
	EXTENDS: REDUCE varformals = empty
183:	CLASS: SHIFT; goto 184
184:	EXTENDS: SHIFT; goto 185
185:	VAR: SHIFT; goto 186
186:	OVERRIDE: SHIFT; goto 187
187:	DEF: SHIFT; goto 188
188:	NATIVE: SHIFT; goto 189
189:	NEW: SHIFT; goto 190
190:	NULL: SHIFT; goto 191
191:	THIS: SHIFT; goto 192
192:	CASE: SHIFT; goto 193
193:	MATCH: SHIFT; goto 194
194:	IF: SHIFT; goto 195
195:	ELSE: SHIFT; goto 196
196:	WHILE: SHIFT; goto 197
197:	SUPER: SHIFT; goto 198
198:	LPAREN: SHIFT; goto 199
199:	RPAREN: SHIFT; goto 200
200:	LBRACE: SHIFT; goto 201
201:	RBRACE: SHIFT; goto 202
202:	COLON: SHIFT; goto 203
203:	COMMA: SHIFT; goto 204
204:	ASSIGN: SHIFT; goto 205
205:	SEMI: SHIFT; goto 206
206:	ARROW: SHIFT; goto 207
207:	DOT: SHIFT; goto 208
208:	PLUS: SHIFT; goto 209
209:	MINUS: SHIFT; goto 210
210:	TIMES: SHIFT; goto 211
211:	DIV: SHIFT; goto 212
212:	LE: SHIFT; goto 213
213:	LT: SHIFT; goto 214
214:	EQUALS: SHIFT; goto 215
215:	NOT: SHIFT; goto 216
216:	TYPE: SHIFT; goto 217
217:	ID: SHIFT; goto 218
218:	INTEGER: SHIFT; goto 219
219:	STRING: SHIFT; goto 220
220:	BOOLEAN: SHIFT; goto 221
221:	EOF: REDUCE bogus = STUB CLASS EXTENDS VAR OVERRIDE DEF NATIVE NEW NULL THIS CASE MATCH IF ELSE WHILE SUPER LPAREN RPAREN LBRACE RBRACE COLON COMMA ASSIGN SEMI ARROW DOT PLUS MINUS TIMES DIV LE LT EQUALS NOT TYPE ID INTEGER STRING BOOLEAN
