// This file was generated by Beaver v0.9.6.1

1:	EOF: REDUCE empty = 
	CLASS: SHIFT; goto 7
	STUB: SHIFT; goto 182
	empty: SHIFT; goto 6
	classdecl: SHIFT; goto 4
	class_list: SHIFT; goto 2
	bogus: SHIFT; goto 3
	program: ACCEPT
2:	EOF: REDUCE program = class_list.cl
3:	EOF: REDUCE program = bogus
4:	EOF: REDUCE empty = 
	CLASS: SHIFT; goto 7
	empty: SHIFT; goto 6
	classdecl: SHIFT; goto 4
	class_list: SHIFT; goto 5
5:	EOF: REDUCE class_list = classdecl.cd class_list.cl
6:	EOF: REDUCE class_list = empty
7:	TYPE: SHIFT; goto 8
8:	LPAREN: SHIFT; goto 169
	empty: SHIFT; goto 181
	varformals: SHIFT; goto 9
	[any]: REDUCE empty = 
9:	LBRACE: REDUCE empty = 
	EXTENDS: SHIFT; goto 163
	empty: SHIFT; goto 168
	have_extends: SHIFT; goto 10
10:	LBRACE: SHIFT; goto 12
	classbody: SHIFT; goto 11
11:	[any]: REDUCE classdecl = CLASS TYPE.t varformals.v have_extends.e classbody.fl
12:	LBRACE: SHIFT; goto 159
	RBRACE: REDUCE empty = 
	VAR: SHIFT; goto 149
	DEF: SHIFT; goto 139
	OVERRIDE: SHIFT; goto 18
	empty: SHIFT; goto 17
	feature: SHIFT; goto 15
	feature_list: SHIFT; goto 13
13:	RBRACE: SHIFT; goto 14
14:	[any]: REDUCE classbody = LBRACE feature_list.fl RBRACE
15:	LBRACE: SHIFT; goto 159
	RBRACE: REDUCE empty = 
	VAR: SHIFT; goto 149
	DEF: SHIFT; goto 139
	OVERRIDE: SHIFT; goto 18
	empty: SHIFT; goto 17
	feature: SHIFT; goto 15
	feature_list: SHIFT; goto 16
16:	RBRACE: REDUCE feature_list = feature.f feature_list.fl
17:	RBRACE: REDUCE feature_list = empty
18:	DEF: SHIFT; goto 19
19:	ID: SHIFT; goto 20
20:	LPAREN: SHIFT; goto 129
	formals: SHIFT; goto 21
21:	COLON: SHIFT; goto 22
22:	TYPE: SHIFT; goto 23
23:	ASSIGN: SHIFT; goto 24
24:	LPAREN: SHIFT; goto 102
	ID: SHIFT; goto 98
	LBRACE: SHIFT; goto 65
	MINUS: SHIFT; goto 110
	NULL: SHIFT; goto 106
	NEW: SHIFT; goto 115
	THIS: SHIFT; goto 100
	SUPER: SHIFT; goto 38
	NOT: SHIFT; goto 113
	INTEGER: SHIFT; goto 107
	STRING: SHIFT; goto 108
	BOOLEAN: SHIFT; goto 109
	IF: SHIFT; goto 30
	WHILE: SHIFT; goto 48
	lexpr: SHIFT; goto 27
	primary: SHIFT; goto 79
	ident: SHIFT; goto 47
	product: SHIFT; goto 124
	sum: SHIFT; goto 118
	equiv: SHIFT; goto 101
	rexpr: SHIFT; goto 37
	rel: SHIFT; goto 53
	expr: SHIFT; goto 25
25:	SEMI: SHIFT; goto 26
26:	[any]: REDUCE feature = OVERRIDE DEF ID.id formals.fl COLON TYPE.t ASSIGN expr.e SEMI
27:	ASSIGN: SHIFT; goto 28
	[any]: REDUCE primary = lexpr.e
28:	LPAREN: SHIFT; goto 102
	ID: SHIFT; goto 98
	LBRACE: SHIFT; goto 65
	MINUS: SHIFT; goto 110
	NULL: SHIFT; goto 106
	NEW: SHIFT; goto 115
	THIS: SHIFT; goto 100
	SUPER: SHIFT; goto 38
	NOT: SHIFT; goto 113
	INTEGER: SHIFT; goto 107
	STRING: SHIFT; goto 108
	BOOLEAN: SHIFT; goto 109
	IF: SHIFT; goto 30
	WHILE: SHIFT; goto 48
	lexpr: SHIFT; goto 112
	primary: SHIFT; goto 79
	ident: SHIFT; goto 47
	product: SHIFT; goto 124
	sum: SHIFT; goto 118
	equiv: SHIFT; goto 101
	rexpr: SHIFT; goto 29
	rel: SHIFT; goto 53
29:	[any]: REDUCE expr = lexpr.le ASSIGN rexpr.re
30:	LPAREN: SHIFT; goto 31
31:	LPAREN: SHIFT; goto 102
	ID: SHIFT; goto 98
	LBRACE: SHIFT; goto 65
	MINUS: SHIFT; goto 110
	NULL: SHIFT; goto 106
	NEW: SHIFT; goto 115
	THIS: SHIFT; goto 100
	SUPER: SHIFT; goto 38
	NOT: SHIFT; goto 113
	INTEGER: SHIFT; goto 107
	STRING: SHIFT; goto 108
	BOOLEAN: SHIFT; goto 109
	IF: SHIFT; goto 30
	WHILE: SHIFT; goto 48
	lexpr: SHIFT; goto 112
	primary: SHIFT; goto 79
	ident: SHIFT; goto 47
	product: SHIFT; goto 124
	sum: SHIFT; goto 118
	equiv: SHIFT; goto 101
	rexpr: SHIFT; goto 32
	rel: SHIFT; goto 53
32:	RPAREN: SHIFT; goto 33
33:	LPAREN: SHIFT; goto 102
	ID: SHIFT; goto 98
	LBRACE: SHIFT; goto 65
	MINUS: SHIFT; goto 110
	NULL: SHIFT; goto 106
	NEW: SHIFT; goto 115
	THIS: SHIFT; goto 100
	SUPER: SHIFT; goto 38
	NOT: SHIFT; goto 113
	INTEGER: SHIFT; goto 107
	STRING: SHIFT; goto 108
	BOOLEAN: SHIFT; goto 109
	IF: SHIFT; goto 30
	WHILE: SHIFT; goto 48
	lexpr: SHIFT; goto 27
	primary: SHIFT; goto 79
	ident: SHIFT; goto 47
	product: SHIFT; goto 124
	sum: SHIFT; goto 118
	equiv: SHIFT; goto 101
	rexpr: SHIFT; goto 37
	rel: SHIFT; goto 53
	expr: SHIFT; goto 34
34:	ELSE: SHIFT; goto 35
35:	LPAREN: SHIFT; goto 102
	ID: SHIFT; goto 98
	LBRACE: SHIFT; goto 65
	MINUS: SHIFT; goto 110
	NULL: SHIFT; goto 106
	NEW: SHIFT; goto 115
	THIS: SHIFT; goto 100
	SUPER: SHIFT; goto 38
	NOT: SHIFT; goto 113
	INTEGER: SHIFT; goto 107
	STRING: SHIFT; goto 108
	BOOLEAN: SHIFT; goto 109
	IF: SHIFT; goto 30
	WHILE: SHIFT; goto 48
	lexpr: SHIFT; goto 27
	primary: SHIFT; goto 79
	ident: SHIFT; goto 47
	product: SHIFT; goto 124
	sum: SHIFT; goto 118
	equiv: SHIFT; goto 101
	rexpr: SHIFT; goto 37
	rel: SHIFT; goto 53
	expr: SHIFT; goto 36
36:	[any]: REDUCE rexpr = IF LPAREN rexpr.cond RPAREN expr.m ELSE expr.e
37:	[any]: REDUCE expr = rexpr.r
38:	DOT: SHIFT; goto 39
39:	ID: SHIFT; goto 40
40:	LPAREN: SHIFT; goto 42
	actuals: SHIFT; goto 41
41:	[any]: REDUCE lexpr = SUPER DOT ID.id actuals.a
42:	LPAREN: SHIFT; goto 102
	ID: SHIFT; goto 98
	LBRACE: SHIFT; goto 65
	MINUS: SHIFT; goto 110
	NULL: SHIFT; goto 106
	NEW: SHIFT; goto 115
	THIS: SHIFT; goto 100
	SUPER: SHIFT; goto 38
	NOT: SHIFT; goto 113
	INTEGER: SHIFT; goto 107
	STRING: SHIFT; goto 108
	BOOLEAN: SHIFT; goto 109
	IF: SHIFT; goto 30
	WHILE: SHIFT; goto 48
	lexpr: SHIFT; goto 27
	primary: SHIFT; goto 79
	ident: SHIFT; goto 47
	product: SHIFT; goto 124
	sum: SHIFT; goto 118
	equiv: SHIFT; goto 101
	empty: SHIFT; goto 128
	rexpr: SHIFT; goto 37
	rel: SHIFT; goto 53
	expr: SHIFT; goto 127
	exp_list: SHIFT; goto 43
	[any]: REDUCE empty = 
43:	RPAREN: SHIFT; goto 44
	COMMA: SHIFT; goto 45
44:	[any]: REDUCE actuals = LPAREN exp_list.el RPAREN
45:	LPAREN: SHIFT; goto 102
	ID: SHIFT; goto 98
	LBRACE: SHIFT; goto 65
	MINUS: SHIFT; goto 110
	NULL: SHIFT; goto 106
	NEW: SHIFT; goto 115
	THIS: SHIFT; goto 100
	SUPER: SHIFT; goto 38
	NOT: SHIFT; goto 113
	INTEGER: SHIFT; goto 107
	STRING: SHIFT; goto 108
	BOOLEAN: SHIFT; goto 109
	IF: SHIFT; goto 30
	WHILE: SHIFT; goto 48
	lexpr: SHIFT; goto 27
	primary: SHIFT; goto 79
	ident: SHIFT; goto 47
	product: SHIFT; goto 124
	sum: SHIFT; goto 118
	equiv: SHIFT; goto 101
	rexpr: SHIFT; goto 37
	rel: SHIFT; goto 53
	expr: SHIFT; goto 46
46:	[any]: REDUCE exp_list = exp_list.el COMMA expr.e
47:	[any]: REDUCE lexpr = ident.id
48:	LPAREN: SHIFT; goto 49
49:	LPAREN: SHIFT; goto 102
	ID: SHIFT; goto 98
	LBRACE: SHIFT; goto 65
	MINUS: SHIFT; goto 110
	NULL: SHIFT; goto 106
	NEW: SHIFT; goto 115
	THIS: SHIFT; goto 100
	SUPER: SHIFT; goto 38
	NOT: SHIFT; goto 113
	INTEGER: SHIFT; goto 107
	STRING: SHIFT; goto 108
	BOOLEAN: SHIFT; goto 109
	IF: SHIFT; goto 30
	WHILE: SHIFT; goto 48
	lexpr: SHIFT; goto 112
	primary: SHIFT; goto 79
	ident: SHIFT; goto 47
	product: SHIFT; goto 124
	sum: SHIFT; goto 118
	equiv: SHIFT; goto 101
	rexpr: SHIFT; goto 50
	rel: SHIFT; goto 53
50:	RPAREN: SHIFT; goto 51
51:	LPAREN: SHIFT; goto 102
	ID: SHIFT; goto 98
	LBRACE: SHIFT; goto 65
	MINUS: SHIFT; goto 110
	NULL: SHIFT; goto 106
	NEW: SHIFT; goto 115
	THIS: SHIFT; goto 100
	SUPER: SHIFT; goto 38
	NOT: SHIFT; goto 113
	INTEGER: SHIFT; goto 107
	STRING: SHIFT; goto 108
	BOOLEAN: SHIFT; goto 109
	IF: SHIFT; goto 30
	WHILE: SHIFT; goto 48
	lexpr: SHIFT; goto 27
	primary: SHIFT; goto 79
	ident: SHIFT; goto 47
	product: SHIFT; goto 124
	sum: SHIFT; goto 118
	equiv: SHIFT; goto 101
	rexpr: SHIFT; goto 37
	rel: SHIFT; goto 53
	expr: SHIFT; goto 52
52:	[any]: REDUCE rexpr = WHILE LPAREN rexpr.cond RPAREN expr.e
53:	LE: SHIFT; goto 54
	LT: SHIFT; goto 125
	[any]: REDUCE rexpr = rel.r
54:	LPAREN: SHIFT; goto 102
	ID: SHIFT; goto 98
	LBRACE: SHIFT; goto 65
	MINUS: SHIFT; goto 110
	NULL: SHIFT; goto 106
	NEW: SHIFT; goto 115
	THIS: SHIFT; goto 100
	SUPER: SHIFT; goto 38
	NOT: SHIFT; goto 113
	INTEGER: SHIFT; goto 107
	STRING: SHIFT; goto 108
	BOOLEAN: SHIFT; goto 109
	lexpr: SHIFT; goto 112
	primary: SHIFT; goto 123
	ident: SHIFT; goto 47
	product: SHIFT; goto 124
	sum: SHIFT; goto 118
	equiv: SHIFT; goto 55
55:	EQUALS: SHIFT; goto 56
	[any]: REDUCE rel = rel.r LE equiv.e
56:	LPAREN: SHIFT; goto 102
	ID: SHIFT; goto 98
	LBRACE: SHIFT; goto 65
	MINUS: SHIFT; goto 110
	NULL: SHIFT; goto 106
	NEW: SHIFT; goto 115
	THIS: SHIFT; goto 100
	SUPER: SHIFT; goto 38
	NOT: SHIFT; goto 113
	INTEGER: SHIFT; goto 107
	STRING: SHIFT; goto 108
	BOOLEAN: SHIFT; goto 109
	lexpr: SHIFT; goto 112
	primary: SHIFT; goto 123
	ident: SHIFT; goto 47
	product: SHIFT; goto 124
	sum: SHIFT; goto 57
57:	MINUS: SHIFT; goto 119
	PLUS: SHIFT; goto 58
	[any]: REDUCE equiv = equiv.e EQUALS sum.s
58:	LPAREN: SHIFT; goto 102
	ID: SHIFT; goto 98
	LBRACE: SHIFT; goto 65
	MINUS: SHIFT; goto 110
	NULL: SHIFT; goto 106
	NEW: SHIFT; goto 115
	THIS: SHIFT; goto 100
	SUPER: SHIFT; goto 38
	NOT: SHIFT; goto 113
	INTEGER: SHIFT; goto 107
	STRING: SHIFT; goto 108
	BOOLEAN: SHIFT; goto 109
	lexpr: SHIFT; goto 112
	primary: SHIFT; goto 123
	ident: SHIFT; goto 47
	product: SHIFT; goto 59
59:	TIMES: SHIFT; goto 60
	DIV: SHIFT; goto 121
	[any]: REDUCE sum = sum.s PLUS product.p
60:	LPAREN: SHIFT; goto 102
	ID: SHIFT; goto 98
	LBRACE: SHIFT; goto 65
	MINUS: SHIFT; goto 110
	NULL: SHIFT; goto 106
	NEW: SHIFT; goto 115
	THIS: SHIFT; goto 100
	SUPER: SHIFT; goto 38
	NOT: SHIFT; goto 113
	INTEGER: SHIFT; goto 107
	STRING: SHIFT; goto 108
	BOOLEAN: SHIFT; goto 109
	lexpr: SHIFT; goto 112
	primary: SHIFT; goto 61
	ident: SHIFT; goto 47
61:	DOT: SHIFT; goto 62
	[any]: REDUCE product = product.p TIMES primary.i
62:	ID: SHIFT; goto 63
63:	LPAREN: SHIFT; goto 42
	actuals: SHIFT; goto 64
64:	[any]: REDUCE primary = primary.p DOT ID.id actuals.a
65:	empty: SHIFT; goto 93
	st_list: SHIFT; goto 68
	block: SHIFT; goto 66
	[any]: REDUCE empty = 
66:	RBRACE: SHIFT; goto 67
67:	[any]: REDUCE primary = LBRACE block.b RBRACE
68:	LPAREN: SHIFT; goto 102
	ID: SHIFT; goto 98
	LBRACE: SHIFT; goto 65
	MINUS: SHIFT; goto 110
	NULL: SHIFT; goto 106
	NEW: SHIFT; goto 115
	THIS: SHIFT; goto 100
	SUPER: SHIFT; goto 38
	NOT: SHIFT; goto 113
	INTEGER: SHIFT; goto 107
	STRING: SHIFT; goto 108
	BOOLEAN: SHIFT; goto 109
	IF: SHIFT; goto 30
	WHILE: SHIFT; goto 48
	VAR: SHIFT; goto 73
	lexpr: SHIFT; goto 27
	primary: SHIFT; goto 79
	ident: SHIFT; goto 47
	product: SHIFT; goto 124
	sum: SHIFT; goto 118
	equiv: SHIFT; goto 101
	rexpr: SHIFT; goto 37
	rel: SHIFT; goto 53
	expr: SHIFT; goto 69
	new_var: SHIFT; goto 71
69:	SEMI: SHIFT; goto 70
	[any]: REDUCE block = st_list.el expr.e
70:	[any]: REDUCE st_list = st_list.el expr.e SEMI
71:	SEMI: SHIFT; goto 72
72:	[any]: REDUCE st_list = st_list.el new_var.ve SEMI
73:	ID: SHIFT; goto 74
74:	COLON: SHIFT; goto 75
75:	TYPE: SHIFT; goto 76
76:	ASSIGN: SHIFT; goto 77
77:	LPAREN: SHIFT; goto 102
	ID: SHIFT; goto 98
	LBRACE: SHIFT; goto 65
	MINUS: SHIFT; goto 110
	NULL: SHIFT; goto 106
	NEW: SHIFT; goto 115
	THIS: SHIFT; goto 100
	SUPER: SHIFT; goto 38
	NOT: SHIFT; goto 113
	INTEGER: SHIFT; goto 107
	STRING: SHIFT; goto 108
	BOOLEAN: SHIFT; goto 109
	IF: SHIFT; goto 30
	WHILE: SHIFT; goto 48
	lexpr: SHIFT; goto 27
	primary: SHIFT; goto 79
	ident: SHIFT; goto 47
	product: SHIFT; goto 124
	sum: SHIFT; goto 118
	equiv: SHIFT; goto 101
	rexpr: SHIFT; goto 37
	rel: SHIFT; goto 53
	expr: SHIFT; goto 78
78:	SEMI: REDUCE new_var = VAR ID.id COLON TYPE.t ASSIGN expr.e
79:	DOT: SHIFT; goto 62
	MATCH: SHIFT; goto 80
	[any]: REDUCE product = primary.p
80:	LBRACE: SHIFT; goto 82
	cases: SHIFT; goto 81
81:	[any]: REDUCE rexpr = primary.p MATCH cases.c
82:	RBRACE: REDUCE empty = 
	CASE: SHIFT; goto 85
	empty: SHIFT; goto 92
	case_block: SHIFT; goto 83
83:	RBRACE: SHIFT; goto 84
84:	[any]: REDUCE cases = LBRACE case_block.cb RBRACE
85:	ID: SHIFT; goto 86
	NULL: SHIFT; goto 94
86:	COLON: SHIFT; goto 87
87:	TYPE: SHIFT; goto 88
88:	ARROW: SHIFT; goto 89
89:	empty: SHIFT; goto 93
	st_list: SHIFT; goto 68
	block: SHIFT; goto 90
	[any]: REDUCE empty = 
90:	RBRACE: REDUCE empty = 
	CASE: SHIFT; goto 85
	empty: SHIFT; goto 92
	case_block: SHIFT; goto 91
91:	RBRACE: REDUCE case_block = CASE ID.id COLON TYPE.t ARROW block.b case_block.cb
92:	RBRACE: REDUCE case_block = empty
93:	RBRACE: REDUCE block = empty
	CASE: REDUCE block = empty
	[any]: REDUCE st_list = empty
94:	ARROW: SHIFT; goto 95
95:	empty: SHIFT; goto 93
	st_list: SHIFT; goto 68
	block: SHIFT; goto 96
	[any]: REDUCE empty = 
96:	RBRACE: REDUCE empty = 
	CASE: SHIFT; goto 85
	empty: SHIFT; goto 92
	case_block: SHIFT; goto 97
97:	RBRACE: REDUCE case_block = CASE NULL ARROW block.b case_block.cb
98:	LPAREN: SHIFT; goto 42
	actuals: SHIFT; goto 99
	[any]: REDUCE ident = ID.id
99:	[any]: REDUCE ident = ID.id actuals.s
100:	[any]: REDUCE ident = THIS
101:	EQUALS: SHIFT; goto 56
	[any]: REDUCE rel = equiv.e
102:	LPAREN: SHIFT; goto 102
	ID: SHIFT; goto 98
	LBRACE: SHIFT; goto 65
	MINUS: SHIFT; goto 110
	NULL: SHIFT; goto 106
	NEW: SHIFT; goto 115
	THIS: SHIFT; goto 100
	SUPER: SHIFT; goto 38
	NOT: SHIFT; goto 113
	INTEGER: SHIFT; goto 107
	STRING: SHIFT; goto 108
	BOOLEAN: SHIFT; goto 109
	IF: SHIFT; goto 30
	WHILE: SHIFT; goto 48
	RPAREN: SHIFT; goto 105
	lexpr: SHIFT; goto 27
	primary: SHIFT; goto 79
	ident: SHIFT; goto 47
	product: SHIFT; goto 124
	sum: SHIFT; goto 118
	equiv: SHIFT; goto 101
	rexpr: SHIFT; goto 37
	rel: SHIFT; goto 53
	expr: SHIFT; goto 103
103:	RPAREN: SHIFT; goto 104
104:	[any]: REDUCE primary = LPAREN expr.e RPAREN
105:	[any]: REDUCE primary = LPAREN RPAREN
106:	[any]: REDUCE primary = NULL
107:	[any]: REDUCE primary = INTEGER.i
108:	[any]: REDUCE primary = STRING.s
109:	[any]: REDUCE primary = BOOLEAN.b
110:	LPAREN: SHIFT; goto 102
	ID: SHIFT; goto 98
	LBRACE: SHIFT; goto 65
	MINUS: SHIFT; goto 110
	NULL: SHIFT; goto 106
	NEW: SHIFT; goto 115
	THIS: SHIFT; goto 100
	SUPER: SHIFT; goto 38
	NOT: SHIFT; goto 113
	INTEGER: SHIFT; goto 107
	STRING: SHIFT; goto 108
	BOOLEAN: SHIFT; goto 109
	lexpr: SHIFT; goto 112
	primary: SHIFT; goto 111
	ident: SHIFT; goto 47
111:	DOT: SHIFT; goto 62
	[any]: REDUCE primary = MINUS primary.p
112:	[any]: REDUCE primary = lexpr.e
113:	LPAREN: SHIFT; goto 102
	ID: SHIFT; goto 98
	LBRACE: SHIFT; goto 65
	MINUS: SHIFT; goto 110
	NULL: SHIFT; goto 106
	NEW: SHIFT; goto 115
	THIS: SHIFT; goto 100
	SUPER: SHIFT; goto 38
	NOT: SHIFT; goto 113
	INTEGER: SHIFT; goto 107
	STRING: SHIFT; goto 108
	BOOLEAN: SHIFT; goto 109
	lexpr: SHIFT; goto 112
	primary: SHIFT; goto 114
	ident: SHIFT; goto 47
114:	DOT: SHIFT; goto 62
	[any]: REDUCE primary = NOT primary.p
115:	TYPE: SHIFT; goto 116
116:	LPAREN: SHIFT; goto 42
	actuals: SHIFT; goto 117
117:	[any]: REDUCE primary = NEW TYPE.t actuals.s
118:	MINUS: SHIFT; goto 119
	PLUS: SHIFT; goto 58
	[any]: REDUCE equiv = sum.s
119:	LPAREN: SHIFT; goto 102
	ID: SHIFT; goto 98
	LBRACE: SHIFT; goto 65
	MINUS: SHIFT; goto 110
	NULL: SHIFT; goto 106
	NEW: SHIFT; goto 115
	THIS: SHIFT; goto 100
	SUPER: SHIFT; goto 38
	NOT: SHIFT; goto 113
	INTEGER: SHIFT; goto 107
	STRING: SHIFT; goto 108
	BOOLEAN: SHIFT; goto 109
	lexpr: SHIFT; goto 112
	primary: SHIFT; goto 123
	ident: SHIFT; goto 47
	product: SHIFT; goto 120
120:	TIMES: SHIFT; goto 60
	DIV: SHIFT; goto 121
	[any]: REDUCE sum = sum.s MINUS product.p
121:	LPAREN: SHIFT; goto 102
	ID: SHIFT; goto 98
	LBRACE: SHIFT; goto 65
	MINUS: SHIFT; goto 110
	NULL: SHIFT; goto 106
	NEW: SHIFT; goto 115
	THIS: SHIFT; goto 100
	SUPER: SHIFT; goto 38
	NOT: SHIFT; goto 113
	INTEGER: SHIFT; goto 107
	STRING: SHIFT; goto 108
	BOOLEAN: SHIFT; goto 109
	lexpr: SHIFT; goto 112
	primary: SHIFT; goto 122
	ident: SHIFT; goto 47
122:	DOT: SHIFT; goto 62
	[any]: REDUCE product = product.p DIV primary.i
123:	DOT: SHIFT; goto 62
	[any]: REDUCE product = primary.p
124:	TIMES: SHIFT; goto 60
	DIV: SHIFT; goto 121
	[any]: REDUCE sum = product.p
125:	LPAREN: SHIFT; goto 102
	ID: SHIFT; goto 98
	LBRACE: SHIFT; goto 65
	MINUS: SHIFT; goto 110
	NULL: SHIFT; goto 106
	NEW: SHIFT; goto 115
	THIS: SHIFT; goto 100
	SUPER: SHIFT; goto 38
	NOT: SHIFT; goto 113
	INTEGER: SHIFT; goto 107
	STRING: SHIFT; goto 108
	BOOLEAN: SHIFT; goto 109
	lexpr: SHIFT; goto 112
	primary: SHIFT; goto 123
	ident: SHIFT; goto 47
	product: SHIFT; goto 124
	sum: SHIFT; goto 118
	equiv: SHIFT; goto 126
126:	EQUALS: SHIFT; goto 56
	[any]: REDUCE rel = rel.r LT equiv.e
127:	[any]: REDUCE exp_list = expr.e
128:	[any]: REDUCE exp_list = empty
129:	ID: SHIFT; goto 134
	empty: SHIFT; goto 138
	formal: SHIFT; goto 137
	formal_list: SHIFT; goto 130
	[any]: REDUCE empty = 
130:	RPAREN: SHIFT; goto 131
	COMMA: SHIFT; goto 132
131:	COLON: REDUCE formals = LPAREN formal_list.fl RPAREN
132:	ID: SHIFT; goto 134
	formal: SHIFT; goto 133
133:	[any]: REDUCE formal_list = formal_list.fl COMMA formal.f
134:	COLON: SHIFT; goto 135
135:	TYPE: SHIFT; goto 136
136:	[any]: REDUCE formal = ID.id COLON TYPE.t
137:	[any]: REDUCE formal_list = formal.f
138:	[any]: REDUCE formal_list = empty
139:	ID: SHIFT; goto 140
140:	LPAREN: SHIFT; goto 129
	formals: SHIFT; goto 141
141:	COLON: SHIFT; goto 142
142:	TYPE: SHIFT; goto 143
143:	ASSIGN: SHIFT; goto 144
144:	LPAREN: SHIFT; goto 102
	ID: SHIFT; goto 98
	LBRACE: SHIFT; goto 65
	MINUS: SHIFT; goto 110
	NULL: SHIFT; goto 106
	NEW: SHIFT; goto 115
	THIS: SHIFT; goto 100
	SUPER: SHIFT; goto 38
	NOT: SHIFT; goto 113
	INTEGER: SHIFT; goto 107
	STRING: SHIFT; goto 108
	BOOLEAN: SHIFT; goto 109
	IF: SHIFT; goto 30
	WHILE: SHIFT; goto 48
	NATIVE: SHIFT; goto 147
	lexpr: SHIFT; goto 27
	primary: SHIFT; goto 79
	ident: SHIFT; goto 47
	product: SHIFT; goto 124
	sum: SHIFT; goto 118
	equiv: SHIFT; goto 101
	rexpr: SHIFT; goto 37
	rel: SHIFT; goto 53
	expr: SHIFT; goto 145
145:	SEMI: SHIFT; goto 146
146:	[any]: REDUCE feature = DEF ID.id formals.fl COLON TYPE.t ASSIGN expr.e SEMI
147:	SEMI: SHIFT; goto 148
148:	[any]: REDUCE feature = DEF ID.id formals.fl COLON TYPE.t ASSIGN NATIVE SEMI
149:	ID: SHIFT; goto 150
150:	COLON: SHIFT; goto 154
	ASSIGN: SHIFT; goto 151
151:	NATIVE: SHIFT; goto 152
152:	SEMI: SHIFT; goto 153
153:	[any]: REDUCE feature = VAR ID.id ASSIGN NATIVE SEMI
154:	TYPE: SHIFT; goto 155
155:	ASSIGN: SHIFT; goto 156
156:	LPAREN: SHIFT; goto 102
	ID: SHIFT; goto 98
	LBRACE: SHIFT; goto 65
	MINUS: SHIFT; goto 110
	NULL: SHIFT; goto 106
	NEW: SHIFT; goto 115
	THIS: SHIFT; goto 100
	SUPER: SHIFT; goto 38
	NOT: SHIFT; goto 113
	INTEGER: SHIFT; goto 107
	STRING: SHIFT; goto 108
	BOOLEAN: SHIFT; goto 109
	IF: SHIFT; goto 30
	WHILE: SHIFT; goto 48
	lexpr: SHIFT; goto 27
	primary: SHIFT; goto 79
	ident: SHIFT; goto 47
	product: SHIFT; goto 124
	sum: SHIFT; goto 118
	equiv: SHIFT; goto 101
	rexpr: SHIFT; goto 37
	rel: SHIFT; goto 53
	expr: SHIFT; goto 157
157:	SEMI: SHIFT; goto 158
158:	[any]: REDUCE feature = VAR ID.id COLON TYPE.t ASSIGN expr.e SEMI
159:	empty: SHIFT; goto 93
	st_list: SHIFT; goto 68
	block: SHIFT; goto 160
	[any]: REDUCE empty = 
160:	RBRACE: SHIFT; goto 161
161:	SEMI: SHIFT; goto 162
162:	[any]: REDUCE feature = LBRACE block.b RBRACE SEMI
163:	TYPE: SHIFT; goto 165
	NATIVE: SHIFT; goto 167
	type_or_native: SHIFT; goto 164
164:	LBRACE: REDUCE have_extends = EXTENDS type_or_native.ext
165:	LPAREN: SHIFT; goto 42
	actuals: SHIFT; goto 166
166:	LBRACE: REDUCE type_or_native = TYPE.t actuals.a
167:	LBRACE: REDUCE type_or_native = NATIVE
168:	LBRACE: REDUCE have_extends = empty
169:	RPAREN: SHIFT; goto 170
	VAR: SHIFT; goto 175
	COMMA: REDUCE empty = 
	empty: SHIFT; goto 180
	one_var: SHIFT; goto 179
	var_list: SHIFT; goto 171
170:	[any]: REDUCE varformals = LPAREN RPAREN
171:	RPAREN: SHIFT; goto 172
	COMMA: SHIFT; goto 173
172:	[any]: REDUCE varformals = LPAREN var_list.vl RPAREN
173:	VAR: SHIFT; goto 175
	one_var: SHIFT; goto 174
174:	[any]: REDUCE var_list = var_list.vl COMMA one_var.v
175:	ID: SHIFT; goto 176
176:	COLON: SHIFT; goto 177
177:	TYPE: SHIFT; goto 178
178:	[any]: REDUCE one_var = VAR ID.id COLON TYPE.t
179:	[any]: REDUCE var_list = one_var.v
180:	[any]: REDUCE var_list = empty
181:	[any]: REDUCE varformals = empty
182:	CLASS: SHIFT; goto 183
183:	EXTENDS: SHIFT; goto 184
184:	VAR: SHIFT; goto 185
185:	OVERRIDE: SHIFT; goto 186
186:	DEF: SHIFT; goto 187
187:	NATIVE: SHIFT; goto 188
188:	NEW: SHIFT; goto 189
189:	NULL: SHIFT; goto 190
190:	THIS: SHIFT; goto 191
191:	CASE: SHIFT; goto 192
192:	MATCH: SHIFT; goto 193
193:	IF: SHIFT; goto 194
194:	ELSE: SHIFT; goto 195
195:	WHILE: SHIFT; goto 196
196:	SUPER: SHIFT; goto 197
197:	LPAREN: SHIFT; goto 198
198:	RPAREN: SHIFT; goto 199
199:	LBRACE: SHIFT; goto 200
200:	RBRACE: SHIFT; goto 201
201:	COLON: SHIFT; goto 202
202:	COMMA: SHIFT; goto 203
203:	ASSIGN: SHIFT; goto 204
204:	SEMI: SHIFT; goto 205
205:	ARROW: SHIFT; goto 206
206:	DOT: SHIFT; goto 207
207:	PLUS: SHIFT; goto 208
208:	MINUS: SHIFT; goto 209
209:	TIMES: SHIFT; goto 210
210:	DIV: SHIFT; goto 211
211:	LE: SHIFT; goto 212
212:	LT: SHIFT; goto 213
213:	EQUALS: SHIFT; goto 214
214:	NOT: SHIFT; goto 215
215:	TYPE: SHIFT; goto 216
216:	ID: SHIFT; goto 217
217:	INTEGER: SHIFT; goto 218
218:	STRING: SHIFT; goto 219
219:	BOOLEAN: SHIFT; goto 220
220:	EOF: REDUCE bogus = STUB CLASS EXTENDS VAR OVERRIDE DEF NATIVE NEW NULL THIS CASE MATCH IF ELSE WHILE SUPER LPAREN RPAREN LBRACE RBRACE COLON COMMA ASSIGN SEMI ARROW DOT PLUS MINUS TIMES DIV LE LT EQUALS NOT TYPE ID INTEGER STRING BOOLEAN
